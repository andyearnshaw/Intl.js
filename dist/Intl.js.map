{"version":3,"file":"Intl.js","sources":["../../../../../../../../../\u0000babelHelpers","../src/util.js","../src/exp.js","../src/6.locales-currencies-tz.js","../src/9.negotiation.js","../src/8.intl.js","../src/11.numberformat.js","../src/cldr.js","../src/12.datetimeformat.js","../src/13.locale-sensitive-functions.js","../src/core.js","../src/browser-main.js"],"sourcesContent":["var babelHelpers = {};\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexport var jsx = function () {\n  var REACT_ELEMENT_TYPE = typeof Symbol === \"function\" && Symbol.for && Symbol.for(\"react.element\") || 0xeac7;\n  return function createRawReactElement(type, props, key, children) {\n    var defaultProps = type && type.defaultProps;\n    var childrenLength = arguments.length - 3;\n\n    if (!props && childrenLength !== 0) {\n      props = {};\n    }\n\n    if (props && defaultProps) {\n      for (var propName in defaultProps) {\n        if (props[propName] === void 0) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    } else if (!props) {\n      props = defaultProps || {};\n    }\n\n    if (childrenLength === 1) {\n      props.children = children;\n    } else if (childrenLength > 1) {\n      var childArray = Array(childrenLength);\n\n      for (var i = 0; i < childrenLength; i++) {\n        childArray[i] = arguments[i + 3];\n      }\n\n      props.children = childArray;\n    }\n\n    return {\n      $$typeof: REACT_ELEMENT_TYPE,\n      type: type,\n      key: key === undefined ? null : '' + key,\n      ref: null,\n      props: props,\n      _owner: null\n    };\n  };\n}();\n\nexport var asyncIterator = function (iterable) {\n  if (typeof Symbol === \"function\") {\n    if (Symbol.asyncIterator) {\n      var method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      return iterable[Symbol.iterator]();\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n};\n\nexport var asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\nexport var asyncGeneratorDelegate = function (inner, awaitWrap) {\n  var iter = {},\n      waiting = false;\n\n  function pump(key, value) {\n    waiting = true;\n    value = new Promise(function (resolve) {\n      resolve(inner[key](value));\n    });\n    return {\n      done: false,\n      value: awaitWrap(value)\n    };\n  }\n\n  ;\n\n  if (typeof Symbol === \"function\" && Symbol.iterator) {\n    iter[Symbol.iterator] = function () {\n      return this;\n    };\n  }\n\n  iter.next = function (value) {\n    if (waiting) {\n      waiting = false;\n      return value;\n    }\n\n    return pump(\"next\", value);\n  };\n\n  if (typeof inner.throw === \"function\") {\n    iter.throw = function (value) {\n      if (waiting) {\n        waiting = false;\n        throw value;\n      }\n\n      return pump(\"throw\", value);\n    };\n  }\n\n  if (typeof inner.return === \"function\") {\n    iter.return = function (value) {\n      return pump(\"return\", value);\n    };\n  }\n\n  return iter;\n};\n\nexport var asyncToGenerator = function (fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new Promise(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return Promise.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n};\n\nexport var classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nexport var createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nexport var defineEnumerableProperties = function (obj, descs) {\n  for (var key in descs) {\n    var desc = descs[key];\n    desc.configurable = desc.enumerable = true;\n    if (\"value\" in desc) desc.writable = true;\n    Object.defineProperty(obj, key, desc);\n  }\n\n  return obj;\n};\n\nexport var defaults = function (obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n};\n\nexport var defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexport var get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nexport var inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar _instanceof = function (left, right) {\n  if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n    return right[Symbol.hasInstance](left);\n  } else {\n    return left instanceof right;\n  }\n};\n\nexport var interopRequireDefault = function (obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n};\n\nexport var interopRequireWildcard = function (obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n};\n\nexport var newArrowCheck = function (innerThis, boundThis) {\n  if (innerThis !== boundThis) {\n    throw new TypeError(\"Cannot instantiate an arrow function\");\n  }\n};\n\nexport var objectDestructuringEmpty = function (obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n};\n\nexport var objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nexport var possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nexport var selfGlobal = typeof global === \"undefined\" ? self : global;\n\nexport var set = function set(object, property, value, receiver) {\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent !== null) {\n      set(parent, property, value, receiver);\n    }\n  } else if (\"value\" in desc && desc.writable) {\n    desc.value = value;\n  } else {\n    var setter = desc.set;\n\n    if (setter !== undefined) {\n      setter.call(receiver, value);\n    }\n  }\n\n  return value;\n};\n\nexport var slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nexport var slicedToArrayLoose = function (arr, i) {\n  if (Array.isArray(arr)) {\n    return arr;\n  } else if (Symbol.iterator in Object(arr)) {\n    var _arr = [];\n\n    for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {\n      _arr.push(_step.value);\n\n      if (i && _arr.length === i) break;\n    }\n\n    return _arr;\n  } else {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n};\n\nexport var taggedTemplateLiteral = function (strings, raw) {\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n};\n\nexport var taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\nexport var temporalRef = function (val, name, undef) {\n  if (val === undef) {\n    throw new ReferenceError(name + \" is not defined - temporal dead zone\");\n  } else {\n    return val;\n  }\n};\n\nexport var temporalUndefined = {};\n\nexport var toArray = function (arr) {\n  return Array.isArray(arr) ? arr : Array.from(arr);\n};\n\nexport var toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nbabelHelpers;\n\nexport { _typeof as typeof, _extends as extends, _instanceof as instanceof }","const realDefineProp = (function () {\n        let sentinel = function(){};\n        try {\n            Object.defineProperty(sentinel, 'a', {\n                get: function () {\n                    return 1;\n                }\n            });\n            Object.defineProperty(sentinel, 'prototype', { writable: false });\n            return sentinel.a === 1 && sentinel.prototype instanceof Object;\n        } catch (e) {\n            return false;\n        }\n    })();\n\n// Need a workaround for getters in ES3\nexport const es3 = !realDefineProp && !Object.prototype.__defineGetter__;\n\n// We use this a lot (and need it for proto-less objects)\nexport const hop = Object.prototype.hasOwnProperty;\n\n// Naive defineProperty for compatibility\nexport const defineProperty = realDefineProp ? Object.defineProperty : function (obj, name, desc) {\n    if ('get' in desc && obj.__defineGetter__)\n        obj.__defineGetter__(name, desc.get);\n\n    else if (!hop.call(obj, name) || 'value' in desc)\n        obj[name] = desc.value;\n};\n\n// Array.prototype.indexOf, as good as we need it to be\nexport const arrIndexOf = Array.prototype.indexOf || function (search) {\n    /*jshint validthis:true */\n    let t = this;\n    if (!t.length)\n        return -1;\n\n    for (let i = arguments[1] || 0, max = t.length; i < max; i++) {\n        if (t[i] === search)\n            return i;\n    }\n\n    return -1;\n};\n\n// Create an object with the specified prototype (2nd arg required for Record)\nexport const objCreate = Object.create || function (proto, props) {\n    let obj;\n\n    function F() {}\n    F.prototype = proto;\n    obj = new F();\n\n    for (let k in props) {\n        if (hop.call(props, k))\n            defineProperty(obj, k, props[k]);\n    }\n\n    return obj;\n};\n\n// Snapshot some (hopefully still) native built-ins\nexport const arrSlice  = Array.prototype.slice;\nexport const arrConcat = Array.prototype.concat;\nexport const arrPush   = Array.prototype.push;\nexport const arrJoin   = Array.prototype.join;\nexport const arrShift  = Array.prototype.shift;\n\n// Naive Function.prototype.bind for compatibility\nexport const fnBind = Function.prototype.bind || function (thisObj) {\n    let fn = this,\n        args = arrSlice.call(arguments, 1);\n\n    // All our (presently) bound functions have either 1 or 0 arguments. By returning\n    // different function signatures, we can pass some tests in ES3 environments\n    if (fn.length === 1) {\n        return function () {\n            return fn.apply(thisObj, arrConcat.call(args, arrSlice.call(arguments)));\n        };\n    }\n    return function () {\n        return fn.apply(thisObj, arrConcat.call(args, arrSlice.call(arguments)));\n    };\n};\n\n// Object housing internal properties for constructors\nexport const internals = objCreate(null);\n\n// Keep internal properties internal\nexport const secret = Math.random();\n\n// Helper functions\n// ================\n\n/**\n * A function to deal with the inaccuracy of calculating log10 in pre-ES6\n * JavaScript environments. Math.log(num) / Math.LN10 was responsible for\n * causing issue #62.\n */\nexport function log10Floor (n) {\n    // ES6 provides the more accurate Math.log10\n    if (typeof Math.log10 === 'function')\n        return Math.floor(Math.log10(n));\n\n    let x = Math.round(Math.log(n) * Math.LOG10E);\n    return x - (Number('1e' + x) > n);\n}\n\n/**\n * A map that doesn't contain Object in its prototype chain\n */\nexport function Record (obj) {\n    // Copy only own properties over unless this object is already a Record instance\n    for (let k in obj) {\n        if (obj instanceof Record || hop.call(obj, k))\n            defineProperty(this, k, { value: obj[k], enumerable: true, writable: true, configurable: true });\n    }\n}\nRecord.prototype = objCreate(null);\n\n/**\n * An ordered list\n */\nexport function List() {\n    defineProperty(this, 'length', { writable:true, value: 0 });\n\n    if (arguments.length)\n        arrPush.apply(this, arrSlice.call(arguments));\n}\nList.prototype = objCreate(null);\n\n/**\n * Constructs a regular expression to restore tainted RegExp properties\n */\nexport function createRegExpRestore () {\n    if (internals.disableRegExpRestore) {\n        return function() { /* no-op */ };\n    }\n\n    let regExpCache = {\n            lastMatch: RegExp.lastMatch || '',\n            leftContext: RegExp.leftContext,\n            multiline: RegExp.multiline,\n            input: RegExp.input\n        },\n        has = false;\n\n    // Create a snapshot of all the 'captured' properties\n    for (let i = 1; i <= 9; i++)\n        has = (regExpCache['$'+i] = RegExp['$'+i]) || has;\n\n    return function() {\n        // Now we've snapshotted some properties, escape the lastMatch string\n        let esc = /[.?*+^$[\\]\\\\(){}|-]/g,\n            lm = regExpCache.lastMatch.replace(esc, '\\\\$&'),\n            reg = new List();\n\n        // If any of the captured strings were non-empty, iterate over them all\n        if (has) {\n            for (let i = 1; i <= 9; i++) {\n                let m = regExpCache['$'+i];\n\n                // If it's empty, add an empty capturing group\n                if (!m)\n                    lm = '()' + lm;\n\n                // Else find the string in lm and escape & wrap it to capture it\n                else {\n                    m = m.replace(esc, '\\\\$&');\n                    lm = lm.replace(m, '(' + m + ')');\n                }\n\n                // Push it to the reg and chop lm to make sure further groups come after\n                arrPush.call(reg, lm.slice(0, lm.indexOf('(') + 1));\n                lm = lm.slice(lm.indexOf('(') + 1);\n            }\n        }\n\n        let exprStr = arrJoin.call(reg, '') + lm;\n\n        // Shorten the regex by replacing each part of the expression with a match\n        // for a string of that exact length.  This is safe for the type of\n        // expressions generated above, because the expression matches the whole\n        // match string, so we know each group and each segment between capturing\n        // groups can be matched by its length alone.\n        exprStr = exprStr.replace(/(\\\\\\(|\\\\\\)|[^()])+/g, (match) => {\n            return `[\\\\s\\\\S]{${match.replace('\\\\','').length}}`;\n        });\n\n        // Create the regular expression that will reconstruct the RegExp properties\n        let expr = new RegExp(exprStr, regExpCache.multiline ? 'gm' : 'g');\n\n        // Set the lastIndex of the generated expression to ensure that the match\n        // is found in the correct index.\n        expr.lastIndex = regExpCache.leftContext.length;\n\n        expr.exec(regExpCache.input);\n    };\n}\n\n/**\n * Mimics ES5's abstract ToObject() function\n */\nexport function toObject (arg) {\n    if (arg === null)\n        throw new TypeError('Cannot convert null or undefined to object');\n\n    if (typeof arg === 'object')\n        return arg;\n    return Object(arg);\n}\n\nexport function toNumber (arg) {\n    if (typeof arg === 'number')\n        return arg;\n    return Number(arg);\n}\n\nexport function toInteger (arg) {\n  let number = toNumber(arg);\n  if (isNaN(number))\n      return 0;\n  if (number === +0 ||\n      number === -0 ||\n      number === +Infinity ||\n      number === -Infinity)\n      return number;\n  if (number < 0)\n      return Math.floor(Math.abs(number)) * -1;\n  return Math.floor(Math.abs(number));\n}\n\nexport function toLength (arg) {\n  let len = toInteger(arg);\n  if (len <= 0)\n      return 0;\n  if (len === Infinity)\n      return Math.pow(2, 53) - 1;\n  return Math.min(len, Math.pow(2, 53) - 1);\n}\n\n/**\n * Returns \"internal\" properties for an object\n */\nexport function getInternalProperties (obj) {\n    if (hop.call(obj, '__getInternalProperties'))\n        return obj.__getInternalProperties(secret);\n\n    return objCreate(null);\n}\n","/**\n* Defines regular expressions for various operations related to the BCP 47 syntax,\n* as defined at http://tools.ietf.org/html/bcp47#section-2.1\n*/\n\n// extlang       = 3ALPHA              ; selected ISO 639 codes\n//                 *2(\"-\" 3ALPHA)      ; permanently reserved\nconst extlang = '[a-z]{3}(?:-[a-z]{3}){0,2}';\n\n// language      = 2*3ALPHA            ; shortest ISO 639 code\n//                 [\"-\" extlang]       ; sometimes followed by\n//                                     ; extended language subtags\n//               / 4ALPHA              ; or reserved for future use\n//               / 5*8ALPHA            ; or registered language subtag\nconst language = '(?:[a-z]{2,3}(?:-' + extlang + ')?|[a-z]{4}|[a-z]{5,8})';\n\n// script        = 4ALPHA              ; ISO 15924 code\nconst script = '[a-z]{4}';\n\n// region        = 2ALPHA              ; ISO 3166-1 code\n//               / 3DIGIT              ; UN M.49 code\nconst region = '(?:[a-z]{2}|\\\\d{3})';\n\n// variant       = 5*8alphanum         ; registered variants\n//               / (DIGIT 3alphanum)\nconst variant = '(?:[a-z0-9]{5,8}|\\\\d[a-z0-9]{3})';\n\n//                                     ; Single alphanumerics\n//                                     ; \"x\" reserved for private use\n// singleton     = DIGIT               ; 0 - 9\n//               / %x41-57             ; A - W\n//               / %x59-5A             ; Y - Z\n//               / %x61-77             ; a - w\n//               / %x79-7A             ; y - z\nconst singleton = '[0-9a-wy-z]';\n\n// extension     = singleton 1*(\"-\" (2*8alphanum))\nconst extension = singleton + '(?:-[a-z0-9]{2,8})+';\n\n// privateuse    = \"x\" 1*(\"-\" (1*8alphanum))\nconst privateuse = 'x(?:-[a-z0-9]{1,8})+';\n\n// irregular     = \"en-GB-oed\"         ; irregular tags do not match\n//               / \"i-ami\"             ; the 'langtag' production and\n//               / \"i-bnn\"             ; would not otherwise be\n//               / \"i-default\"         ; considered 'well-formed'\n//               / \"i-enochian\"        ; These tags are all valid,\n//               / \"i-hak\"             ; but most are deprecated\n//               / \"i-klingon\"         ; in favor of more modern\n//               / \"i-lux\"             ; subtags or subtag\n//               / \"i-mingo\"           ; combination\n//               / \"i-navajo\"\n//               / \"i-pwn\"\n//               / \"i-tao\"\n//               / \"i-tay\"\n//               / \"i-tsu\"\n//               / \"sgn-BE-FR\"\n//               / \"sgn-BE-NL\"\n//               / \"sgn-CH-DE\"\nconst irregular = '(?:en-GB-oed'\n          + '|i-(?:ami|bnn|default|enochian|hak|klingon|lux|mingo|navajo|pwn|tao|tay|tsu)'\n          + '|sgn-(?:BE-FR|BE-NL|CH-DE))';\n\n// regular       = \"art-lojban\"        ; these tags match the 'langtag'\n//               / \"cel-gaulish\"       ; production, but their subtags\n//               / \"no-bok\"            ; are not extended language\n//               / \"no-nyn\"            ; or variant subtags: their meaning\n//               / \"zh-guoyu\"          ; is defined by their registration\n//               / \"zh-hakka\"          ; and all of these are deprecated\n//               / \"zh-min\"            ; in favor of a more modern\n//               / \"zh-min-nan\"        ; subtag or sequence of subtags\n//               / \"zh-xiang\"\nconst regular = '(?:art-lojban|cel-gaulish|no-bok|no-nyn'\n        + '|zh-(?:guoyu|hakka|min|min-nan|xiang))';\n\n// grandfathered = irregular           ; non-redundant tags registered\n//               / regular             ; during the RFC 3066 era\nconst grandfathered = '(?:' + irregular + '|' + regular + ')';\n\n// langtag       = language\n//                 [\"-\" script]\n//                 [\"-\" region]\n//                 *(\"-\" variant)\n//                 *(\"-\" extension)\n//                 [\"-\" privateuse]\nconst langtag = language + '(?:-' + script + ')?(?:-' + region + ')?(?:-'\n        + variant + ')*(?:-' + extension + ')*(?:-' + privateuse + ')?';\n\n// Language-Tag  = langtag             ; normal language tags\n//               / privateuse          ; private use tag\n//               / grandfathered       ; grandfathered tags\nexport let expBCP47Syntax = RegExp('^(?:'+langtag+'|'+privateuse+'|'+grandfathered+')$', 'i');\n\n// Match duplicate variants in a language tag\nexport let expVariantDupes = RegExp('^(?!x).*?-('+variant+')-(?:\\\\w{4,8}-(?!x-))*\\\\1\\\\b', 'i');\n\n// Match duplicate singletons in a language tag (except in private use)\nexport let expSingletonDupes = RegExp('^(?!x).*?-('+singleton+')-(?:\\\\w+-(?!x-))*\\\\1\\\\b', 'i');\n\n// Match all extension sequences\nexport let expExtSequences = RegExp('-'+extension, 'ig');\n","// Sect 6.2 Language Tags\n// ======================\n\nimport {\n    expBCP47Syntax,\n    expExtSequences,\n    expVariantDupes,\n    expSingletonDupes\n} from './exp';\n\nimport {\n    hop,\n    arrJoin,\n    arrSlice\n} from \"./util.js\";\n\n// Default locale is the first-added locale data for us\nexport let defaultLocale;\nexport function setDefaultLocale(locale) {\n    defaultLocale = locale;\n}\n\n// IANA Subtag Registry redundant tag and subtag maps\nconst redundantTags = {\n    tags: {\n        \"art-lojban\": \"jbo\",\n        \"i-ami\": \"ami\",\n        \"i-bnn\": \"bnn\",\n        \"i-hak\": \"hak\",\n        \"i-klingon\": \"tlh\",\n        \"i-lux\": \"lb\",\n        \"i-navajo\": \"nv\",\n        \"i-pwn\": \"pwn\",\n        \"i-tao\": \"tao\",\n        \"i-tay\": \"tay\",\n        \"i-tsu\": \"tsu\",\n        \"no-bok\": \"nb\",\n        \"no-nyn\": \"nn\",\n        \"sgn-BE-FR\": \"sfb\",\n        \"sgn-BE-NL\": \"vgt\",\n        \"sgn-CH-DE\": \"sgg\",\n        \"zh-guoyu\": \"cmn\",\n        \"zh-hakka\": \"hak\",\n        \"zh-min-nan\": \"nan\",\n        \"zh-xiang\": \"hsn\",\n        \"sgn-BR\": \"bzs\",\n        \"sgn-CO\": \"csn\",\n        \"sgn-DE\": \"gsg\",\n        \"sgn-DK\": \"dsl\",\n        \"sgn-ES\": \"ssp\",\n        \"sgn-FR\": \"fsl\",\n        \"sgn-GB\": \"bfi\",\n        \"sgn-GR\": \"gss\",\n        \"sgn-IE\": \"isg\",\n        \"sgn-IT\": \"ise\",\n        \"sgn-JP\": \"jsl\",\n        \"sgn-MX\": \"mfs\",\n        \"sgn-NI\": \"ncs\",\n        \"sgn-NL\": \"dse\",\n        \"sgn-NO\": \"nsl\",\n        \"sgn-PT\": \"psr\",\n        \"sgn-SE\": \"swl\",\n        \"sgn-US\": \"ase\",\n        \"sgn-ZA\": \"sfs\",\n        \"zh-cmn\": \"cmn\",\n        \"zh-cmn-Hans\": \"cmn-Hans\",\n        \"zh-cmn-Hant\": \"cmn-Hant\",\n        \"zh-gan\": \"gan\",\n        \"zh-wuu\": \"wuu\",\n        \"zh-yue\": \"yue\"\n    },\n    subtags: {\n        BU: \"MM\",\n        DD: \"DE\",\n        FX: \"FR\",\n        TP: \"TL\",\n        YD: \"YE\",\n        ZR: \"CD\",\n        heploc: \"alalc97\",\n        'in': \"id\",\n        iw: \"he\",\n        ji: \"yi\",\n        jw: \"jv\",\n        mo: \"ro\",\n        ayx: \"nun\",\n        bjd: \"drl\",\n        ccq: \"rki\",\n        cjr: \"mom\",\n        cka: \"cmr\",\n        cmk: \"xch\",\n        drh: \"khk\",\n        drw: \"prs\",\n        gav: \"dev\",\n        hrr: \"jal\",\n        ibi: \"opa\",\n        kgh: \"kml\",\n        lcq: \"ppr\",\n        mst: \"mry\",\n        myt: \"mry\",\n        sca: \"hle\",\n        tie: \"ras\",\n        tkk: \"twm\",\n        tlw: \"weo\",\n        tnf: \"prs\",\n        ybd: \"rki\",\n        yma: \"lrr\"\n    },\n    extLang: {\n        aao: [\"aao\", \"ar\"],\n        abh: [\"abh\", \"ar\"],\n        abv: [\"abv\", \"ar\"],\n        acm: [\"acm\", \"ar\"],\n        acq: [\"acq\", \"ar\"],\n        acw: [\"acw\", \"ar\"],\n        acx: [\"acx\", \"ar\"],\n        acy: [\"acy\", \"ar\"],\n        adf: [\"adf\", \"ar\"],\n        ads: [\"ads\", \"sgn\"],\n        aeb: [\"aeb\", \"ar\"],\n        aec: [\"aec\", \"ar\"],\n        aed: [\"aed\", \"sgn\"],\n        aen: [\"aen\", \"sgn\"],\n        afb: [\"afb\", \"ar\"],\n        afg: [\"afg\", \"sgn\"],\n        ajp: [\"ajp\", \"ar\"],\n        apc: [\"apc\", \"ar\"],\n        apd: [\"apd\", \"ar\"],\n        arb: [\"arb\", \"ar\"],\n        arq: [\"arq\", \"ar\"],\n        ars: [\"ars\", \"ar\"],\n        ary: [\"ary\", \"ar\"],\n        arz: [\"arz\", \"ar\"],\n        ase: [\"ase\", \"sgn\"],\n        asf: [\"asf\", \"sgn\"],\n        asp: [\"asp\", \"sgn\"],\n        asq: [\"asq\", \"sgn\"],\n        asw: [\"asw\", \"sgn\"],\n        auz: [\"auz\", \"ar\"],\n        avl: [\"avl\", \"ar\"],\n        ayh: [\"ayh\", \"ar\"],\n        ayl: [\"ayl\", \"ar\"],\n        ayn: [\"ayn\", \"ar\"],\n        ayp: [\"ayp\", \"ar\"],\n        bbz: [\"bbz\", \"ar\"],\n        bfi: [\"bfi\", \"sgn\"],\n        bfk: [\"bfk\", \"sgn\"],\n        bjn: [\"bjn\", \"ms\"],\n        bog: [\"bog\", \"sgn\"],\n        bqn: [\"bqn\", \"sgn\"],\n        bqy: [\"bqy\", \"sgn\"],\n        btj: [\"btj\", \"ms\"],\n        bve: [\"bve\", \"ms\"],\n        bvl: [\"bvl\", \"sgn\"],\n        bvu: [\"bvu\", \"ms\"],\n        bzs: [\"bzs\", \"sgn\"],\n        cdo: [\"cdo\", \"zh\"],\n        cds: [\"cds\", \"sgn\"],\n        cjy: [\"cjy\", \"zh\"],\n        cmn: [\"cmn\", \"zh\"],\n        coa: [\"coa\", \"ms\"],\n        cpx: [\"cpx\", \"zh\"],\n        csc: [\"csc\", \"sgn\"],\n        csd: [\"csd\", \"sgn\"],\n        cse: [\"cse\", \"sgn\"],\n        csf: [\"csf\", \"sgn\"],\n        csg: [\"csg\", \"sgn\"],\n        csl: [\"csl\", \"sgn\"],\n        csn: [\"csn\", \"sgn\"],\n        csq: [\"csq\", \"sgn\"],\n        csr: [\"csr\", \"sgn\"],\n        czh: [\"czh\", \"zh\"],\n        czo: [\"czo\", \"zh\"],\n        doq: [\"doq\", \"sgn\"],\n        dse: [\"dse\", \"sgn\"],\n        dsl: [\"dsl\", \"sgn\"],\n        dup: [\"dup\", \"ms\"],\n        ecs: [\"ecs\", \"sgn\"],\n        esl: [\"esl\", \"sgn\"],\n        esn: [\"esn\", \"sgn\"],\n        eso: [\"eso\", \"sgn\"],\n        eth: [\"eth\", \"sgn\"],\n        fcs: [\"fcs\", \"sgn\"],\n        fse: [\"fse\", \"sgn\"],\n        fsl: [\"fsl\", \"sgn\"],\n        fss: [\"fss\", \"sgn\"],\n        gan: [\"gan\", \"zh\"],\n        gds: [\"gds\", \"sgn\"],\n        gom: [\"gom\", \"kok\"],\n        gse: [\"gse\", \"sgn\"],\n        gsg: [\"gsg\", \"sgn\"],\n        gsm: [\"gsm\", \"sgn\"],\n        gss: [\"gss\", \"sgn\"],\n        gus: [\"gus\", \"sgn\"],\n        hab: [\"hab\", \"sgn\"],\n        haf: [\"haf\", \"sgn\"],\n        hak: [\"hak\", \"zh\"],\n        hds: [\"hds\", \"sgn\"],\n        hji: [\"hji\", \"ms\"],\n        hks: [\"hks\", \"sgn\"],\n        hos: [\"hos\", \"sgn\"],\n        hps: [\"hps\", \"sgn\"],\n        hsh: [\"hsh\", \"sgn\"],\n        hsl: [\"hsl\", \"sgn\"],\n        hsn: [\"hsn\", \"zh\"],\n        icl: [\"icl\", \"sgn\"],\n        ils: [\"ils\", \"sgn\"],\n        inl: [\"inl\", \"sgn\"],\n        ins: [\"ins\", \"sgn\"],\n        ise: [\"ise\", \"sgn\"],\n        isg: [\"isg\", \"sgn\"],\n        isr: [\"isr\", \"sgn\"],\n        jak: [\"jak\", \"ms\"],\n        jax: [\"jax\", \"ms\"],\n        jcs: [\"jcs\", \"sgn\"],\n        jhs: [\"jhs\", \"sgn\"],\n        jls: [\"jls\", \"sgn\"],\n        jos: [\"jos\", \"sgn\"],\n        jsl: [\"jsl\", \"sgn\"],\n        jus: [\"jus\", \"sgn\"],\n        kgi: [\"kgi\", \"sgn\"],\n        knn: [\"knn\", \"kok\"],\n        kvb: [\"kvb\", \"ms\"],\n        kvk: [\"kvk\", \"sgn\"],\n        kvr: [\"kvr\", \"ms\"],\n        kxd: [\"kxd\", \"ms\"],\n        lbs: [\"lbs\", \"sgn\"],\n        lce: [\"lce\", \"ms\"],\n        lcf: [\"lcf\", \"ms\"],\n        liw: [\"liw\", \"ms\"],\n        lls: [\"lls\", \"sgn\"],\n        lsg: [\"lsg\", \"sgn\"],\n        lsl: [\"lsl\", \"sgn\"],\n        lso: [\"lso\", \"sgn\"],\n        lsp: [\"lsp\", \"sgn\"],\n        lst: [\"lst\", \"sgn\"],\n        lsy: [\"lsy\", \"sgn\"],\n        ltg: [\"ltg\", \"lv\"],\n        lvs: [\"lvs\", \"lv\"],\n        lzh: [\"lzh\", \"zh\"],\n        max: [\"max\", \"ms\"],\n        mdl: [\"mdl\", \"sgn\"],\n        meo: [\"meo\", \"ms\"],\n        mfa: [\"mfa\", \"ms\"],\n        mfb: [\"mfb\", \"ms\"],\n        mfs: [\"mfs\", \"sgn\"],\n        min: [\"min\", \"ms\"],\n        mnp: [\"mnp\", \"zh\"],\n        mqg: [\"mqg\", \"ms\"],\n        mre: [\"mre\", \"sgn\"],\n        msd: [\"msd\", \"sgn\"],\n        msi: [\"msi\", \"ms\"],\n        msr: [\"msr\", \"sgn\"],\n        mui: [\"mui\", \"ms\"],\n        mzc: [\"mzc\", \"sgn\"],\n        mzg: [\"mzg\", \"sgn\"],\n        mzy: [\"mzy\", \"sgn\"],\n        nan: [\"nan\", \"zh\"],\n        nbs: [\"nbs\", \"sgn\"],\n        ncs: [\"ncs\", \"sgn\"],\n        nsi: [\"nsi\", \"sgn\"],\n        nsl: [\"nsl\", \"sgn\"],\n        nsp: [\"nsp\", \"sgn\"],\n        nsr: [\"nsr\", \"sgn\"],\n        nzs: [\"nzs\", \"sgn\"],\n        okl: [\"okl\", \"sgn\"],\n        orn: [\"orn\", \"ms\"],\n        ors: [\"ors\", \"ms\"],\n        pel: [\"pel\", \"ms\"],\n        pga: [\"pga\", \"ar\"],\n        pks: [\"pks\", \"sgn\"],\n        prl: [\"prl\", \"sgn\"],\n        prz: [\"prz\", \"sgn\"],\n        psc: [\"psc\", \"sgn\"],\n        psd: [\"psd\", \"sgn\"],\n        pse: [\"pse\", \"ms\"],\n        psg: [\"psg\", \"sgn\"],\n        psl: [\"psl\", \"sgn\"],\n        pso: [\"pso\", \"sgn\"],\n        psp: [\"psp\", \"sgn\"],\n        psr: [\"psr\", \"sgn\"],\n        pys: [\"pys\", \"sgn\"],\n        rms: [\"rms\", \"sgn\"],\n        rsi: [\"rsi\", \"sgn\"],\n        rsl: [\"rsl\", \"sgn\"],\n        sdl: [\"sdl\", \"sgn\"],\n        sfb: [\"sfb\", \"sgn\"],\n        sfs: [\"sfs\", \"sgn\"],\n        sgg: [\"sgg\", \"sgn\"],\n        sgx: [\"sgx\", \"sgn\"],\n        shu: [\"shu\", \"ar\"],\n        slf: [\"slf\", \"sgn\"],\n        sls: [\"sls\", \"sgn\"],\n        sqk: [\"sqk\", \"sgn\"],\n        sqs: [\"sqs\", \"sgn\"],\n        ssh: [\"ssh\", \"ar\"],\n        ssp: [\"ssp\", \"sgn\"],\n        ssr: [\"ssr\", \"sgn\"],\n        svk: [\"svk\", \"sgn\"],\n        swc: [\"swc\", \"sw\"],\n        swh: [\"swh\", \"sw\"],\n        swl: [\"swl\", \"sgn\"],\n        syy: [\"syy\", \"sgn\"],\n        tmw: [\"tmw\", \"ms\"],\n        tse: [\"tse\", \"sgn\"],\n        tsm: [\"tsm\", \"sgn\"],\n        tsq: [\"tsq\", \"sgn\"],\n        tss: [\"tss\", \"sgn\"],\n        tsy: [\"tsy\", \"sgn\"],\n        tza: [\"tza\", \"sgn\"],\n        ugn: [\"ugn\", \"sgn\"],\n        ugy: [\"ugy\", \"sgn\"],\n        ukl: [\"ukl\", \"sgn\"],\n        uks: [\"uks\", \"sgn\"],\n        urk: [\"urk\", \"ms\"],\n        uzn: [\"uzn\", \"uz\"],\n        uzs: [\"uzs\", \"uz\"],\n        vgt: [\"vgt\", \"sgn\"],\n        vkk: [\"vkk\", \"ms\"],\n        vkt: [\"vkt\", \"ms\"],\n        vsi: [\"vsi\", \"sgn\"],\n        vsl: [\"vsl\", \"sgn\"],\n        vsv: [\"vsv\", \"sgn\"],\n        wuu: [\"wuu\", \"zh\"],\n        xki: [\"xki\", \"sgn\"],\n        xml: [\"xml\", \"sgn\"],\n        xmm: [\"xmm\", \"ms\"],\n        xms: [\"xms\", \"sgn\"],\n        yds: [\"yds\", \"sgn\"],\n        ysl: [\"ysl\", \"sgn\"],\n        yue: [\"yue\", \"zh\"],\n        zib: [\"zib\", \"sgn\"],\n        zlm: [\"zlm\", \"ms\"],\n        zmi: [\"zmi\", \"ms\"],\n        zsl: [\"zsl\", \"sgn\"],\n        zsm: [\"zsm\", \"ms\"]\n    }\n};\n\n/**\n * Convert only a-z to uppercase as per section 6.1 of the spec\n */\nexport function toLatinUpperCase (str) {\n    let i = str.length;\n\n    while (i--) {\n        let ch = str.charAt(i);\n\n        if (ch >= \"a\" && ch <= \"z\")\n            str = str.slice(0, i) + ch.toUpperCase() + str.slice(i+1);\n    }\n\n    return str;\n}\n\n/**\n * The IsStructurallyValidLanguageTag abstract operation verifies that the locale\n * argument (which must be a String value)\n *\n * - represents a well-formed BCP 47 language tag as specified in RFC 5646 section\n *   2.1, or successor,\n * - does not include duplicate variant subtags, and\n * - does not include duplicate singleton subtags.\n *\n * The abstract operation returns true if locale can be generated from the ABNF\n * grammar in section 2.1 of the RFC, starting with Language-Tag, and does not\n * contain duplicate variant or singleton subtags (other than as a private use\n * subtag). It returns false otherwise. Terminal value characters in the grammar are\n * interpreted as the Unicode equivalents of the ASCII octet values given.\n */\nexport function /* 6.2.2 */IsStructurallyValidLanguageTag(locale) {\n    // represents a well-formed BCP 47 language tag as specified in RFC 5646\n    if (!expBCP47Syntax.test(locale))\n        return false;\n\n    // does not include duplicate variant subtags, and\n    if (expVariantDupes.test(locale))\n        return false;\n\n    // does not include duplicate singleton subtags.\n    if (expSingletonDupes.test(locale))\n        return false;\n\n    return true;\n}\n\n/**\n * The CanonicalizeLanguageTag abstract operation returns the canonical and case-\n * regularized form of the locale argument (which must be a String value that is\n * a structurally valid BCP 47 language tag as verified by the\n * IsStructurallyValidLanguageTag abstract operation). It takes the steps\n * specified in RFC 5646 section 4.5, or successor, to bring the language tag\n * into canonical form, and to regularize the case of the subtags, but does not\n * take the steps to bring a language tag into “extlang form” and to reorder\n * variant subtags.\n\n * The specifications for extensions to BCP 47 language tags, such as RFC 6067,\n * may include canonicalization rules for the extension subtag sequences they\n * define that go beyond the canonicalization rules of RFC 5646 section 4.5.\n * Implementations are allowed, but not required, to apply these additional rules.\n */\nexport function /* 6.2.3 */CanonicalizeLanguageTag (locale) {\n    let match, parts;\n\n    // A language tag is in 'canonical form' when the tag is well-formed\n    // according to the rules in Sections 2.1 and 2.2\n\n    // Section 2.1 says all subtags use lowercase...\n    locale = locale.toLowerCase();\n\n    // ...with 2 exceptions: 'two-letter and four-letter subtags that neither\n    // appear at the start of the tag nor occur after singletons.  Such two-letter\n    // subtags are all uppercase (as in the tags \"en-CA-x-ca\" or \"sgn-BE-FR\") and\n    // four-letter subtags are titlecase (as in the tag \"az-Latn-x-latn\").\n    parts = locale.split('-');\n    for (let i = 1, max = parts.length; i < max; i++) {\n        // Two-letter subtags are all uppercase\n        if (parts[i].length === 2)\n            parts[i] = parts[i].toUpperCase();\n\n        // Four-letter subtags are titlecase\n        else if (parts[i].length === 4)\n            parts[i] = parts[i].charAt(0).toUpperCase() + parts[i].slice(1);\n\n        // Is it a singleton?\n        else if (parts[i].length === 1 && parts[i] !== 'x')\n            break;\n    }\n    locale = arrJoin.call(parts, '-');\n\n    // The steps laid out in RFC 5646 section 4.5 are as follows:\n\n    // 1.  Extension sequences are ordered into case-insensitive ASCII order\n    //     by singleton subtag.\n    if ((match = locale.match(expExtSequences)) && match.length > 1) {\n        // The built-in sort() sorts by ASCII order, so use that\n        match.sort();\n\n        // Replace all extensions with the joined, sorted array\n        locale = locale.replace(\n            RegExp('(?:' + expExtSequences.source + ')+', 'i'),\n            arrJoin.call(match, '')\n        );\n    }\n\n    // 2.  Redundant or grandfathered tags are replaced by their 'Preferred-\n    //     Value', if there is one.\n    if (hop.call(redundantTags.tags, locale))\n        locale = redundantTags.tags[locale];\n\n    // 3.  Subtags are replaced by their 'Preferred-Value', if there is one.\n    //     For extlangs, the original primary language subtag is also\n    //     replaced if there is a primary language subtag in the 'Preferred-\n    //     Value'.\n    parts = locale.split('-');\n\n    for (let i = 1, max = parts.length; i < max; i++) {\n        if (hop.call(redundantTags.subtags, parts[i]))\n            parts[i] = redundantTags.subtags[parts[i]];\n\n        else if (hop.call(redundantTags.extLang, parts[i])) {\n            parts[i] = redundantTags.extLang[parts[i]][0];\n\n            // For extlang tags, the prefix needs to be removed if it is redundant\n            if (i === 1 && redundantTags.extLang[parts[1]][1] === parts[0]) {\n                parts = arrSlice.call(parts, i++);\n                max -= 1;\n            }\n        }\n    }\n\n    return arrJoin.call(parts, '-');\n}\n\n/**\n * The DefaultLocale abstract operation returns a String value representing the\n * structurally valid (6.2.2) and canonicalized (6.2.3) BCP 47 language tag for the\n * host environment’s current locale.\n */\nexport function /* 6.2.4 */DefaultLocale () {\n    return defaultLocale;\n}\n\n// Sect 6.3 Currency Codes\n// =======================\n\nconst expCurrencyCode = /^[A-Z]{3}$/;\n\n/**\n * The IsWellFormedCurrencyCode abstract operation verifies that the currency argument\n * (after conversion to a String value) represents a well-formed 3-letter ISO currency\n * code. The following steps are taken:\n */\nexport function /* 6.3.1 */IsWellFormedCurrencyCode(currency) {\n    // 1. Let `c` be ToString(currency)\n    let c = String(currency);\n\n    // 2. Let `normalized` be the result of mapping c to upper case as described\n    //    in 6.1.\n    let normalized = toLatinUpperCase(c);\n\n    // 3. If the string length of normalized is not 3, return false.\n    // 4. If normalized contains any character that is not in the range \"A\" to \"Z\"\n    //    (U+0041 to U+005A), return false.\n    if (expCurrencyCode.test(normalized) === false)\n        return false;\n\n    // 5. Return true\n    return true;\n}\n","// Sect 9.2 Abstract Operations\n// ============================\n\nimport {\n    List,\n    toObject,\n    toLength,\n    arrIndexOf,\n    arrPush,\n    arrSlice,\n    Record,\n    hop,\n    defineProperty\n} from \"./util.js\";\n\nimport {\n    IsStructurallyValidLanguageTag,\n    CanonicalizeLanguageTag,\n    DefaultLocale\n} from \"./6.locales-currencies-tz.js\";\n\nconst expUnicodeExSeq = /-u(?:-[0-9a-z]{2,8})+/gi; // See `extension` below\n\nexport function /* 9.2.1 */CanonicalizeLocaleList (locales) {\n// The abstract operation CanonicalizeLocaleList takes the following steps:\n\n    // 1. If locales is undefined, then a. Return a new empty List\n    if (locales === undefined)\n        return new List();\n\n    // 2. Let seen be a new empty List.\n    let seen = new List();\n\n    // 3. If locales is a String value, then\n    //    a. Let locales be a new array created as if by the expression new\n    //    Array(locales) where Array is the standard built-in constructor with\n    //    that name and locales is the value of locales.\n    locales = typeof locales === 'string' ? [ locales ] : locales;\n\n    // 4. Let O be ToObject(locales).\n    let O = toObject(locales);\n\n    // 5. Let lenValue be the result of calling the [[Get]] internal method of\n    //    O with the argument \"length\".\n    // 6. Let len be ToUint32(lenValue).\n    let len = toLength(O.length);\n\n    // 7. Let k be 0.\n    let k = 0;\n\n    // 8. Repeat, while k < len\n    while (k < len) {\n        // a. Let Pk be ToString(k).\n        let Pk = String(k);\n\n        // b. Let kPresent be the result of calling the [[HasProperty]] internal\n        //    method of O with argument Pk.\n        let kPresent = Pk in O;\n\n        // c. If kPresent is true, then\n        if (kPresent) {\n            // i. Let kValue be the result of calling the [[Get]] internal\n            //     method of O with argument Pk.\n            let kValue = O[Pk];\n\n            // ii. If the type of kValue is not String or Object, then throw a\n            //     TypeError exception.\n            if (kValue === null || (typeof kValue !== 'string' && typeof kValue !== 'object'))\n                throw new TypeError('String or Object type expected');\n\n            // iii. Let tag be ToString(kValue).\n            let tag = String(kValue);\n\n            // iv. If the result of calling the abstract operation\n            //     IsStructurallyValidLanguageTag (defined in 6.2.2), passing tag as\n            //     the argument, is false, then throw a RangeError exception.\n            if (!IsStructurallyValidLanguageTag(tag))\n                throw new RangeError(\"'\" + tag + \"' is not a structurally valid language tag\");\n\n            // v. Let tag be the result of calling the abstract operation\n            //    CanonicalizeLanguageTag (defined in 6.2.3), passing tag as the\n            //    argument.\n            tag = CanonicalizeLanguageTag(tag);\n\n            // vi. If tag is not an element of seen, then append tag as the last\n            //     element of seen.\n            if (arrIndexOf.call(seen, tag) === -1)\n                arrPush.call(seen, tag);\n        }\n\n        // d. Increase k by 1.\n        k++;\n    }\n\n    // 9. Return seen.\n    return seen;\n}\n\n/**\n * The BestAvailableLocale abstract operation compares the provided argument\n * locale, which must be a String value with a structurally valid and\n * canonicalized BCP 47 language tag, against the locales in availableLocales and\n * returns either the longest non-empty prefix of locale that is an element of\n * availableLocales, or undefined if there is no such element. It uses the\n * fallback mechanism of RFC 4647, section 3.4. The following steps are taken:\n */\nexport function /* 9.2.2 */BestAvailableLocale (availableLocales, locale) {\n    // 1. Let candidate be locale\n    let candidate = locale;\n\n    // 2. Repeat\n    while (candidate) {\n        // a. If availableLocales contains an element equal to candidate, then return\n        // candidate.\n        if (arrIndexOf.call(availableLocales, candidate) > -1)\n            return candidate;\n\n        // b. Let pos be the character index of the last occurrence of \"-\"\n        // (U+002D) within candidate. If that character does not occur, return\n        // undefined.\n        let pos = candidate.lastIndexOf('-');\n\n        if (pos < 0)\n            return;\n\n        // c. If pos ≥ 2 and the character \"-\" occurs at index pos-2 of candidate,\n        //    then decrease pos by 2.\n        if (pos >= 2 && candidate.charAt(pos - 2) === '-')\n            pos -= 2;\n\n        // d. Let candidate be the substring of candidate from position 0, inclusive,\n        //    to position pos, exclusive.\n        candidate = candidate.substring(0, pos);\n    }\n}\n\n/**\n * The LookupMatcher abstract operation compares requestedLocales, which must be\n * a List as returned by CanonicalizeLocaleList, against the locales in\n * availableLocales and determines the best available language to meet the\n * request. The following steps are taken:\n */\nexport function /* 9.2.3 */LookupMatcher (availableLocales, requestedLocales) {\n    // 1. Let i be 0.\n    let i = 0;\n\n    // 2. Let len be the number of elements in requestedLocales.\n    let len = requestedLocales.length;\n\n    // 3. Let availableLocale be undefined.\n    let availableLocale;\n\n    let locale, noExtensionsLocale;\n\n    // 4. Repeat while i < len and availableLocale is undefined:\n    while (i < len && !availableLocale) {\n        // a. Let locale be the element of requestedLocales at 0-origined list\n        //    position i.\n        locale = requestedLocales[i];\n\n        // b. Let noExtensionsLocale be the String value that is locale with all\n        //    Unicode locale extension sequences removed.\n        noExtensionsLocale = String(locale).replace(expUnicodeExSeq, '');\n\n        // c. Let availableLocale be the result of calling the\n        //    BestAvailableLocale abstract operation (defined in 9.2.2) with\n        //    arguments availableLocales and noExtensionsLocale.\n        availableLocale = BestAvailableLocale(availableLocales, noExtensionsLocale);\n\n        // d. Increase i by 1.\n        i++;\n    }\n\n    // 5. Let result be a new Record.\n    let result = new Record();\n\n    // 6. If availableLocale is not undefined, then\n    if (availableLocale !== undefined) {\n        // a. Set result.[[locale]] to availableLocale.\n        result['[[locale]]'] = availableLocale;\n\n        // b. If locale and noExtensionsLocale are not the same String value, then\n        if (String(locale) !== String(noExtensionsLocale)) {\n            // i. Let extension be the String value consisting of the first\n            //    substring of locale that is a Unicode locale extension sequence.\n            let extension = locale.match(expUnicodeExSeq)[0];\n\n            // ii. Let extensionIndex be the character position of the initial\n            //     \"-\" of the first Unicode locale extension sequence within locale.\n            let extensionIndex = locale.indexOf('-u-');\n\n            // iii. Set result.[[extension]] to extension.\n            result['[[extension]]'] = extension;\n\n            // iv. Set result.[[extensionIndex]] to extensionIndex.\n            result['[[extensionIndex]]'] = extensionIndex;\n        }\n    }\n    // 7. Else\n    else\n        // a. Set result.[[locale]] to the value returned by the DefaultLocale abstract\n        //    operation (defined in 6.2.4).\n        result['[[locale]]'] = DefaultLocale();\n\n    // 8. Return result\n    return result;\n}\n\n/**\n * The BestFitMatcher abstract operation compares requestedLocales, which must be\n * a List as returned by CanonicalizeLocaleList, against the locales in\n * availableLocales and determines the best available language to meet the\n * request. The algorithm is implementation dependent, but should produce results\n * that a typical user of the requested locales would perceive as at least as\n * good as those produced by the LookupMatcher abstract operation. Options\n * specified through Unicode locale extension sequences must be ignored by the\n * algorithm. Information about such subsequences is returned separately.\n * The abstract operation returns a record with a [[locale]] field, whose value\n * is the language tag of the selected locale, which must be an element of\n * availableLocales. If the language tag of the request locale that led to the\n * selected locale contained a Unicode locale extension sequence, then the\n * returned record also contains an [[extension]] field whose value is the first\n * Unicode locale extension sequence, and an [[extensionIndex]] field whose value\n * is the index of the first Unicode locale extension sequence within the request\n * locale language tag.\n */\nexport function /* 9.2.4 */BestFitMatcher (availableLocales, requestedLocales) {\n    return LookupMatcher(availableLocales, requestedLocales);\n}\n\n/**\n * The ResolveLocale abstract operation compares a BCP 47 language priority list\n * requestedLocales against the locales in availableLocales and determines the\n * best available language to meet the request. availableLocales and\n * requestedLocales must be provided as List values, options as a Record.\n */\nexport function /* 9.2.5 */ResolveLocale (availableLocales, requestedLocales, options, relevantExtensionKeys, localeData) {\n    if (availableLocales.length === 0) {\n        throw new ReferenceError('No locale data has been provided for this object yet.');\n    }\n\n    // The following steps are taken:\n    // 1. Let matcher be the value of options.[[localeMatcher]].\n    let matcher = options['[[localeMatcher]]'];\n\n    let r;\n\n    // 2. If matcher is \"lookup\", then\n    if (matcher === 'lookup')\n        // a. Let r be the result of calling the LookupMatcher abstract operation\n        //    (defined in 9.2.3) with arguments availableLocales and\n        //    requestedLocales.\n        r = LookupMatcher(availableLocales, requestedLocales);\n\n    // 3. Else\n    else\n        // a. Let r be the result of calling the BestFitMatcher abstract\n        //    operation (defined in 9.2.4) with arguments availableLocales and\n        //    requestedLocales.\n        r = BestFitMatcher(availableLocales, requestedLocales);\n\n    // 4. Let foundLocale be the value of r.[[locale]].\n    let foundLocale = r['[[locale]]'];\n\n    let extensionSubtags, extensionSubtagsLength;\n\n    // 5. If r has an [[extension]] field, then\n    if (hop.call(r, '[[extension]]')) {\n        // a. Let extension be the value of r.[[extension]].\n        let extension = r['[[extension]]'];\n        // b. Let split be the standard built-in function object defined in ES5,\n        //    15.5.4.14.\n        let split = String.prototype.split;\n        // c. Let extensionSubtags be the result of calling the [[Call]] internal\n        //    method of split with extension as the this value and an argument\n        //    list containing the single item \"-\".\n        extensionSubtags = split.call(extension, '-');\n        // d. Let extensionSubtagsLength be the result of calling the [[Get]]\n        //    internal method of extensionSubtags with argument \"length\".\n        extensionSubtagsLength = extensionSubtags.length;\n    }\n\n    // 6. Let result be a new Record.\n    let result = new Record();\n\n    // 7. Set result.[[dataLocale]] to foundLocale.\n    result['[[dataLocale]]'] = foundLocale;\n\n    // 8. Let supportedExtension be \"-u\".\n    let supportedExtension = '-u';\n    // 9. Let i be 0.\n    let i = 0;\n    // 10. Let len be the result of calling the [[Get]] internal method of\n    //     relevantExtensionKeys with argument \"length\".\n    let len = relevantExtensionKeys.length;\n\n    // 11 Repeat while i < len:\n    while (i < len) {\n        // a. Let key be the result of calling the [[Get]] internal method of\n        //    relevantExtensionKeys with argument ToString(i).\n        let key = relevantExtensionKeys[i];\n        // b. Let foundLocaleData be the result of calling the [[Get]] internal\n        //    method of localeData with the argument foundLocale.\n        let foundLocaleData = localeData[foundLocale];\n        // c. Let keyLocaleData be the result of calling the [[Get]] internal\n        //    method of foundLocaleData with the argument key.\n        let keyLocaleData = foundLocaleData[key];\n        // d. Let value be the result of calling the [[Get]] internal method of\n        //    keyLocaleData with argument \"0\".\n        let value = keyLocaleData['0'];\n        // e. Let supportedExtensionAddition be \"\".\n        let supportedExtensionAddition = '';\n        // f. Let indexOf be the standard built-in function object defined in\n        //    ES5, 15.4.4.14.\n        let indexOf = arrIndexOf;\n\n        // g. If extensionSubtags is not undefined, then\n        if (extensionSubtags !== undefined) {\n            // i. Let keyPos be the result of calling the [[Call]] internal\n            //    method of indexOf with extensionSubtags as the this value and\n            // an argument list containing the single item key.\n            let keyPos = indexOf.call(extensionSubtags, key);\n\n            // ii. If keyPos ≠ -1, then\n            if (keyPos !== -1) {\n                // 1. If keyPos + 1 < extensionSubtagsLength and the length of the\n                //    result of calling the [[Get]] internal method of\n                //    extensionSubtags with argument ToString(keyPos +1) is greater\n                //    than 2, then\n                if (keyPos + 1 < extensionSubtagsLength\n                        && extensionSubtags[keyPos + 1].length > 2) {\n                    // a. Let requestedValue be the result of calling the [[Get]]\n                    //    internal method of extensionSubtags with argument\n                    //    ToString(keyPos + 1).\n                    let requestedValue = extensionSubtags[keyPos + 1];\n                    // b. Let valuePos be the result of calling the [[Call]]\n                    //    internal method of indexOf with keyLocaleData as the\n                    //    this value and an argument list containing the single\n                    //    item requestedValue.\n                    let valuePos = indexOf.call(keyLocaleData, requestedValue);\n\n                    // c. If valuePos ≠ -1, then\n                    if (valuePos !== -1) {\n                        // i. Let value be requestedValue.\n                        value = requestedValue,\n                        // ii. Let supportedExtensionAddition be the\n                        //     concatenation of \"-\", key, \"-\", and value.\n                        supportedExtensionAddition = '-' + key + '-' + value;\n                    }\n                }\n                // 2. Else\n                else {\n                    // a. Let valuePos be the result of calling the [[Call]]\n                    // internal method of indexOf with keyLocaleData as the this\n                    // value and an argument list containing the single item\n                    // \"true\".\n                    let valuePos = indexOf(keyLocaleData, 'true');\n\n                    // b. If valuePos ≠ -1, then\n                    if (valuePos !== -1)\n                        // i. Let value be \"true\".\n                        value = 'true';\n                }\n            }\n        }\n        // h. If options has a field [[<key>]], then\n        if (hop.call(options, '[[' + key + ']]')) {\n            // i. Let optionsValue be the value of options.[[<key>]].\n            let optionsValue = options['[[' + key + ']]'];\n\n            // ii. If the result of calling the [[Call]] internal method of indexOf\n            //     with keyLocaleData as the this value and an argument list\n            //     containing the single item optionsValue is not -1, then\n            if (indexOf.call(keyLocaleData, optionsValue) !== -1) {\n                // 1. If optionsValue is not equal to value, then\n                if (optionsValue !== value) {\n                    // a. Let value be optionsValue.\n                    value = optionsValue;\n                    // b. Let supportedExtensionAddition be \"\".\n                    supportedExtensionAddition = '';\n                }\n            }\n        }\n        // i. Set result.[[<key>]] to value.\n        result['[[' + key + ']]'] = value;\n\n        // j. Append supportedExtensionAddition to supportedExtension.\n        supportedExtension += supportedExtensionAddition;\n\n        // k. Increase i by 1.\n        i++;\n    }\n    // 12. If the length of supportedExtension is greater than 2, then\n    if (supportedExtension.length > 2) {\n        // a.\n        let privateIndex = foundLocale.indexOf(\"-x-\");\n        // b.\n        if (privateIndex === -1) {\n            // i.\n            foundLocale = foundLocale + supportedExtension;\n        }\n        // c.\n        else {\n            // i.\n            let preExtension = foundLocale.substring(0, privateIndex);\n            // ii.\n            let postExtension = foundLocale.substring(privateIndex);\n            // iii.\n            foundLocale = preExtension + supportedExtension + postExtension;\n        }\n        // d. asserting - skipping\n        // e.\n        foundLocale = CanonicalizeLanguageTag(foundLocale);\n    }\n    // 13. Set result.[[locale]] to foundLocale.\n    result['[[locale]]'] = foundLocale;\n\n    // 14. Return result.\n    return result;\n}\n\n/**\n * The LookupSupportedLocales abstract operation returns the subset of the\n * provided BCP 47 language priority list requestedLocales for which\n * availableLocales has a matching locale when using the BCP 47 Lookup algorithm.\n * Locales appear in the same order in the returned list as in requestedLocales.\n * The following steps are taken:\n */\nexport function /* 9.2.6 */LookupSupportedLocales (availableLocales, requestedLocales) {\n    // 1. Let len be the number of elements in requestedLocales.\n    let len = requestedLocales.length;\n    // 2. Let subset be a new empty List.\n    let subset = new List();\n    // 3. Let k be 0.\n    let k = 0;\n\n    // 4. Repeat while k < len\n    while (k < len) {\n        // a. Let locale be the element of requestedLocales at 0-origined list\n        //    position k.\n        let locale = requestedLocales[k];\n        // b. Let noExtensionsLocale be the String value that is locale with all\n        //    Unicode locale extension sequences removed.\n        let noExtensionsLocale = String(locale).replace(expUnicodeExSeq, '');\n        // c. Let availableLocale be the result of calling the\n        //    BestAvailableLocale abstract operation (defined in 9.2.2) with\n        //    arguments availableLocales and noExtensionsLocale.\n        let availableLocale = BestAvailableLocale(availableLocales, noExtensionsLocale);\n\n        // d. If availableLocale is not undefined, then append locale to the end of\n        //    subset.\n        if (availableLocale !== undefined)\n            arrPush.call(subset, locale);\n\n        // e. Increment k by 1.\n        k++;\n    }\n\n    // 5. Let subsetArray be a new Array object whose elements are the same\n    //    values in the same order as the elements of subset.\n    let subsetArray = arrSlice.call(subset);\n\n    // 6. Return subsetArray.\n    return subsetArray;\n}\n\n/**\n * The BestFitSupportedLocales abstract operation returns the subset of the\n * provided BCP 47 language priority list requestedLocales for which\n * availableLocales has a matching locale when using the Best Fit Matcher\n * algorithm. Locales appear in the same order in the returned list as in\n * requestedLocales. The steps taken are implementation dependent.\n */\nexport function /*9.2.7 */BestFitSupportedLocales (availableLocales, requestedLocales) {\n    // ###TODO: implement this function as described by the specification###\n    return LookupSupportedLocales(availableLocales, requestedLocales);\n}\n\n/**\n * The SupportedLocales abstract operation returns the subset of the provided BCP\n * 47 language priority list requestedLocales for which availableLocales has a\n * matching locale. Two algorithms are available to match the locales: the Lookup\n * algorithm described in RFC 4647 section 3.4, and an implementation dependent\n * best-fit algorithm. Locales appear in the same order in the returned list as\n * in requestedLocales. The following steps are taken:\n */\nexport function /*9.2.8 */SupportedLocales (availableLocales, requestedLocales, options) {\n    let matcher, subset;\n\n    // 1. If options is not undefined, then\n    if (options !== undefined) {\n        // a. Let options be ToObject(options).\n        options = new Record(toObject(options));\n        // b. Let matcher be the result of calling the [[Get]] internal method of\n        //    options with argument \"localeMatcher\".\n        matcher = options.localeMatcher;\n\n        // c. If matcher is not undefined, then\n        if (matcher !== undefined) {\n            // i. Let matcher be ToString(matcher).\n            matcher = String(matcher);\n\n            // ii. If matcher is not \"lookup\" or \"best fit\", then throw a RangeError\n            //     exception.\n            if (matcher !== 'lookup' && matcher !== 'best fit')\n                throw new RangeError('matcher should be \"lookup\" or \"best fit\"');\n        }\n    }\n    // 2. If matcher is undefined or \"best fit\", then\n    if (matcher === undefined || matcher === 'best fit')\n        // a. Let subset be the result of calling the BestFitSupportedLocales\n        //    abstract operation (defined in 9.2.7) with arguments\n        //    availableLocales and requestedLocales.\n        subset = BestFitSupportedLocales(availableLocales, requestedLocales);\n    // 3. Else\n    else\n        // a. Let subset be the result of calling the LookupSupportedLocales\n        //    abstract operation (defined in 9.2.6) with arguments\n        //    availableLocales and requestedLocales.\n        subset = LookupSupportedLocales(availableLocales, requestedLocales);\n\n    // 4. For each named own property name P of subset,\n    for (let P in subset) {\n        if (!hop.call(subset, P))\n            continue;\n\n        // a. Let desc be the result of calling the [[GetOwnProperty]] internal\n        //    method of subset with P.\n        // b. Set desc.[[Writable]] to false.\n        // c. Set desc.[[Configurable]] to false.\n        // d. Call the [[DefineOwnProperty]] internal method of subset with P, desc,\n        //    and true as arguments.\n        defineProperty(subset, P, {\n            writable: false, configurable: false, value: subset[P]\n        });\n    }\n    // \"Freeze\" the array so no new elements can be added\n    defineProperty(subset, 'length', { writable: false });\n\n    // 5. Return subset\n    return subset;\n}\n\n/**\n * The GetOption abstract operation extracts the value of the property named\n * property from the provided options object, converts it to the required type,\n * checks whether it is one of a List of allowed values, and fills in a fallback\n * value if necessary.\n */\nexport function /*9.2.9 */GetOption (options, property, type, values, fallback) {\n    // 1. Let value be the result of calling the [[Get]] internal method of\n    //    options with argument property.\n    let value = options[property];\n\n    // 2. If value is not undefined, then\n    if (value !== undefined) {\n        // a. Assert: type is \"boolean\" or \"string\".\n        // b. If type is \"boolean\", then let value be ToBoolean(value).\n        // c. If type is \"string\", then let value be ToString(value).\n        value = type === 'boolean' ? Boolean(value)\n                  : (type === 'string' ? String(value) : value);\n\n        // d. If values is not undefined, then\n        if (values !== undefined) {\n            // i. If values does not contain an element equal to value, then throw a\n            //    RangeError exception.\n            if (arrIndexOf.call(values, value) === -1)\n                throw new RangeError(\"'\" + value + \"' is not an allowed value for `\" + property +'`');\n        }\n\n        // e. Return value.\n        return value;\n    }\n    // Else return fallback.\n    return fallback;\n}\n\n/**\n * The GetNumberOption abstract operation extracts a property value from the\n * provided options object, converts it to a Number value, checks whether it is\n * in the allowed range, and fills in a fallback value if necessary.\n */\nexport function /* 9.2.10 */GetNumberOption (options, property, minimum, maximum, fallback) {\n    // 1. Let value be the result of calling the [[Get]] internal method of\n    //    options with argument property.\n    let value = options[property];\n\n    // 2. If value is not undefined, then\n    if (value !== undefined) {\n        // a. Let value be ToNumber(value).\n        value = Number(value);\n\n        // b. If value is NaN or less than minimum or greater than maximum, throw a\n        //    RangeError exception.\n        if (isNaN(value) || value < minimum || value > maximum)\n            throw new RangeError('Value is not a number or outside accepted range');\n\n        // c. Return floor(value).\n        return Math.floor(value);\n    }\n    // 3. Else return fallback.\n    return fallback;\n}\n","import {\n    CanonicalizeLocaleList\n} from \"./9.negotiation.js\";\n\n// 8 The Intl Object\nexport const Intl = {};\n\n// 8.2 Function Properties of the Intl Object\n\n// 8.2.1\n// @spec[tc39/ecma402/master/spec/intl.html]\n// @clause[sec-intl.getcanonicallocales]\nfunction getCanonicalLocales (locales) {\n    // 1. Let ll be ? CanonicalizeLocaleList(locales).\n    let ll = CanonicalizeLocaleList(locales);\n    // 2. Return CreateArrayFromList(ll).\n    {\n        let result = [];\n\n        let len = ll.length;\n        let k = 0;\n\n        while (k < len) {\n            result[k] = ll[k];\n            k++;\n        }\n        return result;\n    }\n}\n\nObject.defineProperty(Intl, 'getCanonicalLocales', {\n  enumerable: false,\n  configurable: true,\n  writable: true,\n  value: getCanonicalLocales\n});\n","// 11.1 The Intl.NumberFormat constructor\n// ======================================\n\nimport {\n    IsWellFormedCurrencyCode\n} from \"./6.locales-currencies-tz.js\";\n\nimport {\n    Intl\n} from \"./8.intl.js\";\n\nimport {\n    CanonicalizeLocaleList,\n    SupportedLocales,\n    ResolveLocale,\n    GetNumberOption,\n    GetOption\n} from \"./9.negotiation.js\";\n\nimport {\n    internals,\n    log10Floor,\n    List,\n    toObject,\n    arrPush,\n    arrJoin,\n    arrShift,\n    Record,\n    hop,\n    defineProperty,\n    es3,\n    fnBind,\n    getInternalProperties,\n    createRegExpRestore,\n    secret,\n    objCreate\n} from \"./util.js\";\n\n// Currency minor units output from get-4217 grunt task, formatted\nconst currencyMinorUnits = {\n    BHD: 3, BYR: 0, XOF: 0, BIF: 0, XAF: 0, CLF: 4, CLP: 0, KMF: 0, DJF: 0,\n    XPF: 0, GNF: 0, ISK: 0, IQD: 3, JPY: 0, JOD: 3, KRW: 0, KWD: 3, LYD: 3,\n    OMR: 3, PYG: 0, RWF: 0, TND: 3, UGX: 0, UYI: 0, VUV: 0, VND: 0\n};\n\n// Define the NumberFormat constructor internally so it cannot be tainted\nexport function NumberFormatConstructor () {\n    let locales = arguments[0];\n    let options = arguments[1];\n\n    if (!this || this === Intl) {\n        return new Intl.NumberFormat(locales, options);\n    }\n\n    return InitializeNumberFormat(toObject(this), locales, options);\n}\n\ndefineProperty(Intl, 'NumberFormat', {\n    configurable: true,\n    writable: true,\n    value: NumberFormatConstructor\n});\n\n// Must explicitly set prototypes as unwritable\ndefineProperty(Intl.NumberFormat, 'prototype', {\n    writable: false\n});\n\n/**\n * The abstract operation InitializeNumberFormat accepts the arguments\n * numberFormat (which must be an object), locales, and options. It initializes\n * numberFormat as a NumberFormat object.\n */\nexport function /*11.1.1.1 */InitializeNumberFormat (numberFormat, locales, options) {\n    // This will be a internal properties object if we're not already initialized\n    let internal = getInternalProperties(numberFormat);\n\n    // Create an object whose props can be used to restore the values of RegExp props\n    let regexpRestore = createRegExpRestore();\n\n    // 1. If numberFormat has an [[initializedIntlObject]] internal property with\n    // value true, throw a TypeError exception.\n    if (internal['[[initializedIntlObject]]'] === true)\n        throw new TypeError('`this` object has already been initialized as an Intl object');\n\n    // Need this to access the `internal` object\n    defineProperty(numberFormat, '__getInternalProperties', {\n        value: function () {\n            // NOTE: Non-standard, for internal use only\n            if (arguments[0] === secret)\n                return internal;\n        }\n    });\n\n    // 2. Set the [[initializedIntlObject]] internal property of numberFormat to true.\n    internal['[[initializedIntlObject]]'] = true;\n\n    // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList\n    //    abstract operation (defined in 9.2.1) with argument locales.\n    let requestedLocales = CanonicalizeLocaleList(locales);\n\n    // 4. If options is undefined, then\n    if (options === undefined)\n        // a. Let options be the result of creating a new object as if by the\n        // expression new Object() where Object is the standard built-in constructor\n        // with that name.\n        options = {};\n\n    // 5. Else\n    else\n        // a. Let options be ToObject(options).\n        options = toObject(options);\n\n    // 6. Let opt be a new Record.\n    let opt = new Record(),\n\n    // 7. Let matcher be the result of calling the GetOption abstract operation\n    //    (defined in 9.2.9) with the arguments options, \"localeMatcher\", \"string\",\n    //    a List containing the two String values \"lookup\" and \"best fit\", and\n    //    \"best fit\".\n        matcher =  GetOption(options, 'localeMatcher', 'string', new List('lookup', 'best fit'), 'best fit');\n\n    // 8. Set opt.[[localeMatcher]] to matcher.\n    opt['[[localeMatcher]]'] = matcher;\n\n    // 9. Let NumberFormat be the standard built-in object that is the initial value\n    //    of Intl.NumberFormat.\n    // 10. Let localeData be the value of the [[localeData]] internal property of\n    //     NumberFormat.\n    let localeData = internals.NumberFormat['[[localeData]]'];\n\n    // 11. Let r be the result of calling the ResolveLocale abstract operation\n    //     (defined in 9.2.5) with the [[availableLocales]] internal property of\n    //     NumberFormat, requestedLocales, opt, the [[relevantExtensionKeys]]\n    //     internal property of NumberFormat, and localeData.\n    let r = ResolveLocale(\n            internals.NumberFormat['[[availableLocales]]'], requestedLocales,\n            opt, internals.NumberFormat['[[relevantExtensionKeys]]'], localeData\n        );\n\n    // 12. Set the [[locale]] internal property of numberFormat to the value of\n    //     r.[[locale]].\n    internal['[[locale]]'] = r['[[locale]]'];\n\n    // 13. Set the [[numberingSystem]] internal property of numberFormat to the value\n    //     of r.[[nu]].\n    internal['[[numberingSystem]]'] = r['[[nu]]'];\n\n    // The specification doesn't tell us to do this, but it's helpful later on\n    internal['[[dataLocale]]'] = r['[[dataLocale]]'];\n\n    // 14. Let dataLocale be the value of r.[[dataLocale]].\n    let dataLocale = r['[[dataLocale]]'];\n\n    // 15. Let s be the result of calling the GetOption abstract operation with the\n    //     arguments options, \"style\", \"string\", a List containing the three String\n    //     values \"decimal\", \"percent\", and \"currency\", and \"decimal\".\n    let s = GetOption(options, 'style', 'string', new List('decimal', 'percent', 'currency'), 'decimal');\n\n    // 16. Set the [[style]] internal property of numberFormat to s.\n    internal['[[style]]'] = s;\n\n    // 17. Let c be the result of calling the GetOption abstract operation with the\n    //     arguments options, \"currency\", \"string\", undefined, and undefined.\n    let c = GetOption(options, 'currency', 'string');\n\n    // 18. If c is not undefined and the result of calling the\n    //     IsWellFormedCurrencyCode abstract operation (defined in 6.3.1) with\n    //     argument c is false, then throw a RangeError exception.\n    if (c !== undefined && !IsWellFormedCurrencyCode(c))\n        throw new RangeError(\"'\" + c + \"' is not a valid currency code\");\n\n    // 19. If s is \"currency\" and c is undefined, throw a TypeError exception.\n    if (s === 'currency' && c === undefined)\n        throw new TypeError('Currency code is required when style is currency');\n\n    let cDigits;\n\n    // 20. If s is \"currency\", then\n    if (s === 'currency') {\n        // a. Let c be the result of converting c to upper case as specified in 6.1.\n        c = c.toUpperCase();\n\n        // b. Set the [[currency]] internal property of numberFormat to c.\n        internal['[[currency]]'] = c;\n\n        // c. Let cDigits be the result of calling the CurrencyDigits abstract\n        //    operation (defined below) with argument c.\n        cDigits = CurrencyDigits(c);\n    }\n\n    // 21. Let cd be the result of calling the GetOption abstract operation with the\n    //     arguments options, \"currencyDisplay\", \"string\", a List containing the\n    //     three String values \"code\", \"symbol\", and \"name\", and \"symbol\".\n    let cd = GetOption(options, 'currencyDisplay', 'string', new List('code', 'symbol', 'name'), 'symbol');\n\n    // 22. If s is \"currency\", then set the [[currencyDisplay]] internal property of\n    //     numberFormat to cd.\n    if (s === 'currency')\n        internal['[[currencyDisplay]]'] = cd;\n\n    // 23. Let mnid be the result of calling the GetNumberOption abstract operation\n    //     (defined in 9.2.10) with arguments options, \"minimumIntegerDigits\", 1, 21,\n    //     and 1.\n    let mnid = GetNumberOption(options, 'minimumIntegerDigits', 1, 21, 1);\n\n    // 24. Set the [[minimumIntegerDigits]] internal property of numberFormat to mnid.\n    internal['[[minimumIntegerDigits]]'] = mnid;\n\n    // 25. If s is \"currency\", then let mnfdDefault be cDigits; else let mnfdDefault\n    //     be 0.\n    let mnfdDefault = s === 'currency' ? cDigits : 0;\n\n    // 26. Let mnfd be the result of calling the GetNumberOption abstract operation\n    //     with arguments options, \"minimumFractionDigits\", 0, 20, and mnfdDefault.\n    let mnfd = GetNumberOption(options, 'minimumFractionDigits', 0, 20, mnfdDefault);\n\n    // 27. Set the [[minimumFractionDigits]] internal property of numberFormat to mnfd.\n    internal['[[minimumFractionDigits]]'] = mnfd;\n\n    // 28. If s is \"currency\", then let mxfdDefault be max(mnfd, cDigits); else if s\n    //     is \"percent\", then let mxfdDefault be max(mnfd, 0); else let mxfdDefault\n    //     be max(mnfd, 3).\n    let mxfdDefault = s === 'currency' ? Math.max(mnfd, cDigits)\n                    : (s === 'percent' ? Math.max(mnfd, 0) : Math.max(mnfd, 3));\n\n    // 29. Let mxfd be the result of calling the GetNumberOption abstract operation\n    //     with arguments options, \"maximumFractionDigits\", mnfd, 20, and mxfdDefault.\n    let mxfd = GetNumberOption(options, 'maximumFractionDigits', mnfd, 20, mxfdDefault);\n\n    // 30. Set the [[maximumFractionDigits]] internal property of numberFormat to mxfd.\n    internal['[[maximumFractionDigits]]'] = mxfd;\n\n    // 31. Let mnsd be the result of calling the [[Get]] internal method of options\n    //     with argument \"minimumSignificantDigits\".\n    let mnsd = options.minimumSignificantDigits;\n\n    // 32. Let mxsd be the result of calling the [[Get]] internal method of options\n    //     with argument \"maximumSignificantDigits\".\n    let mxsd = options.maximumSignificantDigits;\n\n    // 33. If mnsd is not undefined or mxsd is not undefined, then:\n    if (mnsd !== undefined || mxsd !== undefined) {\n        // a. Let mnsd be the result of calling the GetNumberOption abstract\n        //    operation with arguments options, \"minimumSignificantDigits\", 1, 21,\n        //    and 1.\n        mnsd = GetNumberOption(options, 'minimumSignificantDigits', 1, 21, 1);\n\n        // b. Let mxsd be the result of calling the GetNumberOption abstract\n        //     operation with arguments options, \"maximumSignificantDigits\", mnsd,\n        //     21, and 21.\n        mxsd = GetNumberOption(options, 'maximumSignificantDigits', mnsd, 21, 21);\n\n        // c. Set the [[minimumSignificantDigits]] internal property of numberFormat\n        //    to mnsd, and the [[maximumSignificantDigits]] internal property of\n        //    numberFormat to mxsd.\n        internal['[[minimumSignificantDigits]]'] = mnsd;\n        internal['[[maximumSignificantDigits]]'] = mxsd;\n    }\n    // 34. Let g be the result of calling the GetOption abstract operation with the\n    //     arguments options, \"useGrouping\", \"boolean\", undefined, and true.\n    let g = GetOption(options, 'useGrouping', 'boolean', undefined, true);\n\n    // 35. Set the [[useGrouping]] internal property of numberFormat to g.\n    internal['[[useGrouping]]'] = g;\n\n    // 36. Let dataLocaleData be the result of calling the [[Get]] internal method of\n    //     localeData with argument dataLocale.\n    let dataLocaleData = localeData[dataLocale];\n\n    // 37. Let patterns be the result of calling the [[Get]] internal method of\n    //     dataLocaleData with argument \"patterns\".\n    let patterns = dataLocaleData.patterns;\n\n    // 38. Assert: patterns is an object (see 11.2.3)\n\n    // 39. Let stylePatterns be the result of calling the [[Get]] internal method of\n    //     patterns with argument s.\n    let stylePatterns = patterns[s];\n\n    // 40. Set the [[positivePattern]] internal property of numberFormat to the\n    //     result of calling the [[Get]] internal method of stylePatterns with the\n    //     argument \"positivePattern\".\n    internal['[[positivePattern]]'] = stylePatterns.positivePattern;\n\n    // 41. Set the [[negativePattern]] internal property of numberFormat to the\n    //     result of calling the [[Get]] internal method of stylePatterns with the\n    //     argument \"negativePattern\".\n    internal['[[negativePattern]]'] = stylePatterns.negativePattern;\n\n    // 42. Set the [[boundFormat]] internal property of numberFormat to undefined.\n    internal['[[boundFormat]]'] = undefined;\n\n    // 43. Set the [[initializedNumberFormat]] internal property of numberFormat to\n    //     true.\n    internal['[[initializedNumberFormat]]'] = true;\n\n    // In ES3, we need to pre-bind the format() function\n    if (es3)\n        numberFormat.format = GetFormatNumber.call(numberFormat);\n\n    // Restore the RegExp properties\n    regexpRestore();\n\n    // Return the newly initialised object\n    return numberFormat;\n}\n\nfunction CurrencyDigits(currency) {\n    // When the CurrencyDigits abstract operation is called with an argument currency\n    // (which must be an upper case String value), the following steps are taken:\n\n    // 1. If the ISO 4217 currency and funds code list contains currency as an\n    // alphabetic code, then return the minor unit value corresponding to the\n    // currency from the list; else return 2.\n    return currencyMinorUnits[currency] !== undefined\n                ? currencyMinorUnits[currency]\n                : 2;\n}\n\n/* 11.2.3 */internals.NumberFormat = {\n    '[[availableLocales]]': [],\n    '[[relevantExtensionKeys]]': ['nu'],\n    '[[localeData]]': {}\n};\n\n/**\n * When the supportedLocalesOf method of Intl.NumberFormat is called, the\n * following steps are taken:\n */\n/* 11.2.2 */\ndefineProperty(Intl.NumberFormat, 'supportedLocalesOf', {\n    configurable: true,\n    writable: true,\n    value: fnBind.call(function (locales) {\n        // Bound functions only have the `this` value altered if being used as a constructor,\n        // this lets us imitate a native function that has no constructor\n        if (!hop.call(this, '[[availableLocales]]'))\n            throw new TypeError('supportedLocalesOf() is not a constructor');\n\n        // Create an object whose props can be used to restore the values of RegExp props\n        let regexpRestore = createRegExpRestore(),\n\n        // 1. If options is not provided, then let options be undefined.\n            options = arguments[1],\n\n        // 2. Let availableLocales be the value of the [[availableLocales]] internal\n        //    property of the standard built-in object that is the initial value of\n        //    Intl.NumberFormat.\n\n            availableLocales = this['[[availableLocales]]'],\n\n        // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList\n        //    abstract operation (defined in 9.2.1) with argument locales.\n            requestedLocales = CanonicalizeLocaleList(locales);\n\n        // Restore the RegExp properties\n        regexpRestore();\n\n        // 4. Return the result of calling the SupportedLocales abstract operation\n        //    (defined in 9.2.8) with arguments availableLocales, requestedLocales,\n        //    and options.\n        return SupportedLocales(availableLocales, requestedLocales, options);\n    }, internals.NumberFormat)\n});\n\n/**\n * This named accessor property returns a function that formats a number\n * according to the effective locale and the formatting options of this\n * NumberFormat object.\n */\n/* 11.3.2 */defineProperty(Intl.NumberFormat.prototype, 'format', {\n    configurable: true,\n    get: GetFormatNumber\n});\n\nfunction GetFormatNumber() {\n        let internal = this !== null && typeof this === 'object' && getInternalProperties(this);\n\n        // Satisfy test 11.3_b\n        if (!internal || !internal['[[initializedNumberFormat]]'])\n            throw new TypeError('`this` value for format() is not an initialized Intl.NumberFormat object.');\n\n        // The value of the [[Get]] attribute is a function that takes the following\n        // steps:\n\n        // 1. If the [[boundFormat]] internal property of this NumberFormat object\n        //    is undefined, then:\n        if (internal['[[boundFormat]]'] === undefined) {\n            // a. Let F be a Function object, with internal properties set as\n            //    specified for built-in functions in ES5, 15, or successor, and the\n            //    length property set to 1, that takes the argument value and\n            //    performs the following steps:\n            let F = function (value) {\n                // i. If value is not provided, then let value be undefined.\n                // ii. Let x be ToNumber(value).\n                // iii. Return the result of calling the FormatNumber abstract\n                //      operation (defined below) with arguments this and x.\n                return FormatNumber(this, /* x = */Number(value));\n            };\n\n            // b. Let bind be the standard built-in function object defined in ES5,\n            //    15.3.4.5.\n            // c. Let bf be the result of calling the [[Call]] internal method of\n            //    bind with F as the this value and an argument list containing\n            //    the single item this.\n            let bf = fnBind.call(F, this);\n\n            // d. Set the [[boundFormat]] internal property of this NumberFormat\n            //    object to bf.\n            internal['[[boundFormat]]'] = bf;\n        }\n        // Return the value of the [[boundFormat]] internal property of this\n        // NumberFormat object.\n        return internal['[[boundFormat]]'];\n    }\n\nfunction formatToParts(value = undefined) {\n  let internal = this !== null && typeof this === 'object' && getInternalProperties(this);\n  if (!internal || !internal['[[initializedNumberFormat]]'])\n      throw new TypeError('`this` value for formatToParts() is not an initialized Intl.NumberFormat object.');\n\n  let x = Number(value);\n  return FormatNumberToParts(this, x);\n}\n\nObject.defineProperty(Intl.NumberFormat.prototype, 'formatToParts', {\n  configurable: true,\n  enumerable: false,\n  writable: true,\n  value: formatToParts\n});\n\n/*\n * @spec[tc39/ecma402/master/spec/numberformat.html]\n * @clause[sec-formatnumbertoparts]\n */\nfunction FormatNumberToParts(numberFormat, x) {\n    // 1. Let parts be ? PartitionNumberPattern(numberFormat, x).\n    let parts = PartitionNumberPattern(numberFormat, x);\n    // 2. Let result be ArrayCreate(0).\n    let result = [];\n    // 3. Let n be 0.\n    let n = 0;\n    // 4. For each part in parts, do:\n    for (let i = 0; parts.length > i; i++) {\n        let part = parts[i];\n        // a. Let O be ObjectCreate(%ObjectPrototype%).\n        let O = {};\n        // a. Perform ? CreateDataPropertyOrThrow(O, \"type\", part.[[type]]).\n        O.type = part['[[type]]'];\n        // a. Perform ? CreateDataPropertyOrThrow(O, \"value\", part.[[value]]).\n        O.value = part['[[value]]'];\n        // a. Perform ? CreateDataPropertyOrThrow(result, ? ToString(n), O).\n        result[n] = O;\n        // a. Increment n by 1.\n        n += 1;\n    }\n    // 5. Return result.\n    return result;\n}\n\n/*\n * @spec[tc39/ecma402/master/spec/numberformat.html]\n * @clause[sec-formatnumberstring]\n */\nfunction FormatNumberToString(numberFormat, x) {\n    let internal = getInternalProperties(numberFormat);\n    let result;\n\n    // 1. Assert: numberFormat.[[initializedIntlObject]] is true.\n\n    // 2. If the numberFormat.[[minimumSignificantDigits]] and numberFormat.[[maximumSignificantDigits]] are present, then\n    if (hop.call(internal, '[[minimumSignificantDigits]]') &&\n        hop.call(internal, '[[maximumSignificantDigits]]')) {\n        // a. Let result be ToRawPrecision(x, numberFormat.[[minimumSignificantDigits]], numberFormat.[[maximumSignificantDigits]]).\n        result = ToRawPrecision(x,\n          internal['[[minimumSignificantDigits]]'],\n          internal['[[maximumSignificantDigits]]']);\n    }\n    // 3. Else,\n    else {\n        // a. Let result be ToRawFixed(x, numberFormat.[[minimumIntegerDigits]], numberFormat.[[minimumFractionDigits]], numberFormat.[[maximumFractionDigits]]).\n        result = ToRawFixed(x,\n          internal['[[minimumIntegerDigits]]'],\n          internal['[[minimumFractionDigits]]'],\n          internal['[[maximumFractionDigits]]']);\n    }\n    // 4. Return result.\n    return result;\n}\n\n/*\n * @spec[tc39/ecma402/master/spec/numberformat.html]\n * @clause[sec-partitionnumberpattern]\n */\nfunction PartitionNumberPattern(numberFormat, x) {\n\n    let internal = getInternalProperties(numberFormat),\n        locale = internal['[[dataLocale]]'],\n        nums = internal['[[numberingSystem]]'],\n        data = internals.NumberFormat['[[localeData]]'][locale],\n        ild = data.symbols[nums] || data.symbols.latn,\n        pattern;\n\n    // 1. If x is not NaN and x < 0, then:\n    if (!isNaN(x) && x < 0) {\n        // a. Let x be -x.\n        x = -x;\n        // b. Let pattern be the value of numberFormat.[[negativePattern]].\n        pattern = internal['[[negativePattern]]'];\n    }\n    // 2. Else,\n    else {\n        // a. Let pattern be the value of numberFormat.[[positivePattern]].\n        pattern = internal['[[positivePattern]]'];\n    }\n    // 3. Let result be a new empty List.\n    let result = new List();\n    // 4. Let beginIndex be Call(%StringProto_indexOf%, pattern, \"{\", 0).\n    let beginIndex = pattern.indexOf('{', 0);\n    // 5. Let endIndex be 0.\n    let endIndex = 0;\n    // 6. Let nextIndex be 0.\n    let nextIndex = 0;\n    // 7. Let length be the number of code units in pattern.\n    let length = pattern.length;\n    // 8. Repeat while beginIndex is an integer index into pattern:\n    while (beginIndex > -1 && beginIndex < length) {\n        // a. Set endIndex to Call(%StringProto_indexOf%, pattern, \"}\", beginIndex)\n        endIndex = pattern.indexOf('}', beginIndex);\n        // b. If endIndex = -1, throw new Error exception.\n        if (endIndex === -1) throw new Error();\n        // c. If beginIndex is greater than nextIndex, then:\n        if (beginIndex > nextIndex) {\n            // i. Let literal be a substring of pattern from position nextIndex, inclusive, to position beginIndex, exclusive.\n            let literal = pattern.substring(nextIndex, beginIndex);\n            // ii. Add new part record { [[type]]: \"literal\", [[value]]: literal } as a new element of the list result.\n            arrPush.call(result, { '[[type]]': 'literal', '[[value]]': literal });\n        }\n        // d. Let p be the substring of pattern from position beginIndex, exclusive, to position endIndex, exclusive.\n        let p = pattern.substring(beginIndex + 1, endIndex);\n        // e. If p is equal \"number\", then:\n        if (p === \"number\") {\n            // i. If x is NaN,\n            if (isNaN(x)) {\n                // 1. Let n be an ILD String value indicating the NaN value.\n                let n = ild.nan;\n                // 2. Add new part record { [[type]]: \"nan\", [[value]]: n } as a new element of the list result.\n                arrPush.call(result, { '[[type]]': 'nan', '[[value]]': n });\n            }\n            // ii. Else if isFinite(x) is false,\n            else if (!isFinite(x)) {\n                // 1. Let n be an ILD String value indicating infinity.\n                let n = ild.infinity;\n                // 2. Add new part record { [[type]]: \"infinity\", [[value]]: n } as a new element of the list result.\n                arrPush.call(result, { '[[type]]': 'infinity', '[[value]]': n });\n            }\n            // iii. Else,\n            else {\n                // 1. If numberFormat.[[style]] is \"percent\", let x be 100 × x.\n                if (internal['[[style]]'] === 'percent') x *= 100;\n\n                // 2. Let n be FormatNumberToString(numberFormat, x).\n                let n = FormatNumberToString(numberFormat, x);\n\n                // 3. If the numberFormat.[[numberingSystem]] matches one of the values in the \"Numbering System\" column of Table 3 below, then\n                if (numSys[nums]) {\n                    // a. Let digits be an array whose 10 String valued elements are the UTF-16 string representations of the 10 digits specified in the \"Digits\" column of the matching row in Table 2.\n                    let digits = numSys[nums];\n                    // a. Replace each digit in n with the value of digits[digit].\n                    n = String(n).replace(/\\d/g, (digit) => {\n                        return digits[digit];\n                    });\n                }\n                // 4. Else use an implementation dependent algorithm to map n to the appropriate representation of n in the given numbering system.\n                else n = String(n); // ###TODO###\n\n                let integer;\n                let fraction;\n                // 5. Let decimalSepIndex be Call(%StringProto_indexOf%, n, \".\", 0).\n                let decimalSepIndex = n.indexOf('.', 0);\n                // 6. If decimalSepIndex > 0, then:\n                if (decimalSepIndex > 0) {\n                    // a. Let integer be the substring of n from position 0, inclusive, to position decimalSepIndex, exclusive.\n                    integer = n.substring(0, decimalSepIndex);\n                    // b. Let fraction be the substring of n from position decimalSepIndex, exclusive, to the end of n.\n                    fraction = n.substring(decimalSepIndex + 1, decimalSepIndex.length);\n                }\n                // 7. Else:\n                else {\n                    // a. Let integer be n.\n                    integer = n;\n                    // b. Let fraction be undefined.\n                    fraction = undefined;\n                }\n                // 8. If the value of the numberFormat.[[useGrouping]] is true,\n                if (internal['[[useGrouping]]'] === true) {\n                    // a. Let groupSepSymbol be the ILND String representing the grouping separator.\n                    let groupSepSymbol = ild.group;\n                    // b. Let groups be a List whose elements are, in left to right order, the substrings defined by ILND set of locations within the integer.\n                    let groups = [];\n                    // ----> implementation:\n                    // Primary group represents the group closest to the decimal\n                    let pgSize = data.patterns.primaryGroupSize || 3;\n                    // Secondary group is every other group\n                    let sgSize = data.patterns.secondaryGroupSize || pgSize;\n                    // Group only if necessary\n                    if (integer.length > pgSize) {\n                        // Index of the primary grouping separator\n                        let end = integer.length - pgSize;\n                        // Starting index for our loop\n                        let idx = end % sgSize;\n                        let start = integer.slice(0, idx);\n                        if (start.length) arrPush.call(groups, start);\n                        // Loop to separate into secondary grouping digits\n                        while (idx < end) {\n                            arrPush.call(groups, integer.slice(idx, idx + sgSize));\n                            idx += sgSize;\n                        }\n                        // Add the primary grouping digits\n                        arrPush.call(groups, integer.slice(end));\n                    } else {\n                        arrPush.call(groups, integer);\n                    }\n                    // c. Assert: The number of elements in groups List is greater than 0.\n                    if (groups.length === 0) throw new Error();\n                    // d. Repeat, while groups List is not empty:\n                    while (groups.length) {\n                        // i. Remove the first element from groups and let integerGroup be the value of that element.\n                        let integerGroup = arrShift.call(groups);\n                        // ii. Add new part record { [[type]]: \"integer\", [[value]]: integerGroup } as a new element of the list result.\n                        arrPush.call(result, { '[[type]]': 'integer', '[[value]]': integerGroup });\n                        // iii. If groups List is not empty, then:\n                        if (groups.length) {\n                            // 1. Add new part record { [[type]]: \"group\", [[value]]: groupSepSymbol } as a new element of the list result.\n                            arrPush.call(result, { '[[type]]': 'group', '[[value]]': groupSepSymbol });\n                        }\n                    }\n                }\n                // 9. Else,\n                else {\n                    // a. Add new part record { [[type]]: \"integer\", [[value]]: integer } as a new element of the list result.\n                    arrPush.call(result, { '[[type]]': 'integer', '[[value]]': integer });\n                }\n                // 10. If fraction is not undefined, then:\n                if (fraction !== undefined) {\n                    // a. Let decimalSepSymbol be the ILND String representing the decimal separator.\n                    let decimalSepSymbol = ild.decimal;\n                    // b. Add new part record { [[type]]: \"decimal\", [[value]]: decimalSepSymbol } as a new element of the list result.\n                    arrPush.call(result, { '[[type]]': 'decimal', '[[value]]': decimalSepSymbol });\n                    // c. Add new part record { [[type]]: \"fraction\", [[value]]: fraction } as a new element of the list result.\n                    arrPush.call(result, { '[[type]]': 'fraction', '[[value]]': fraction });\n                }\n            }\n        }\n        // f. Else if p is equal \"plusSign\", then:\n        else if (p === \"plusSign\") {\n            // i. Let plusSignSymbol be the ILND String representing the plus sign.\n            let plusSignSymbol = ild.plusSign;\n            // ii. Add new part record { [[type]]: \"plusSign\", [[value]]: plusSignSymbol } as a new element of the list result.\n            arrPush.call(result, { '[[type]]': 'plusSign', '[[value]]': plusSignSymbol });\n        }\n        // g. Else if p is equal \"minusSign\", then:\n        else if (p === \"minusSign\") {\n            // i. Let minusSignSymbol be the ILND String representing the minus sign.\n            let minusSignSymbol = ild.minusSign;\n            // ii. Add new part record { [[type]]: \"minusSign\", [[value]]: minusSignSymbol } as a new element of the list result.\n            arrPush.call(result, { '[[type]]': 'minusSign', '[[value]]': minusSignSymbol });\n        }\n        // h. Else if p is equal \"percentSign\" and numberFormat.[[style]] is \"percent\", then:\n        else if (p === \"percentSign\" && internal['[[style]]'] === \"percent\") {\n            // i. Let percentSignSymbol be the ILND String representing the percent sign.\n            let percentSignSymbol = ild.percentSign;\n            // ii. Add new part record { [[type]]: \"percentSign\", [[value]]: percentSignSymbol } as a new element of the list result.\n            arrPush.call(result, { '[[type]]': 'literal', '[[value]]': percentSignSymbol });\n        }\n        // i. Else if p is equal \"currency\" and numberFormat.[[style]] is \"currency\", then:\n        else if (p === \"currency\" && internal['[[style]]'] === \"currency\") {\n            // i. Let currency be the value of numberFormat.[[currency]].\n            let currency = internal['[[currency]]'];\n\n            let cd;\n\n            // iii. If numberFormat.[[currencyDisplay]] is \"code\", then\n            if (internal['[[currencyDisplay]]'] === \"code\") {\n                // 1. Let cd be currency.\n                cd = currency;\n            }\n            // iv. Else if numberFormat.[[currencyDisplay]] is \"symbol\", then\n            else if (internal['[[currencyDisplay]]'] === \"symbol\") {\n                // 1. Let cd be an ILD string representing currency in short form. If the implementation does not have such a representation of currency, use currency itself.\n                cd = data.currencies[currency] || currency;\n            }\n            // v. Else if numberFormat.[[currencyDisplay]] is \"name\", then\n            else if (internal['[[currencyDisplay]]'] === \"name\") {\n                // 1. Let cd be an ILD string representing currency in long form. If the implementation does not have such a representation of currency, then use currency itself.\n                cd = currency;\n            }\n            // vi. Add new part record { [[type]]: \"currency\", [[value]]: cd } as a new element of the list result.\n            arrPush.call(result, { '[[type]]': 'currency', '[[value]]': cd });\n        }\n        // j. Else,\n        else {\n          // i. Let literal be the substring of pattern from position beginIndex, inclusive, to position endIndex, inclusive.\n          let literal = pattern.substring(beginIndex, endIndex);\n          // ii. Add new part record { [[type]]: \"literal\", [[value]]: literal } as a new element of the list result.\n          arrPush.call(result, { '[[type]]': 'literal', '[[value]]': literal });\n        }\n        // k. Set nextIndex to endIndex + 1.\n        nextIndex = endIndex + 1;\n        // l. Set beginIndex to Call(%StringProto_indexOf%, pattern, \"{\", nextIndex)\n        beginIndex = pattern.indexOf('{', nextIndex);\n    }\n    // 9. If nextIndex is less than length, then:\n    if (nextIndex < length) {\n        // a. Let literal be the substring of pattern from position nextIndex, inclusive, to position length, exclusive.\n        let literal = pattern.substring(nextIndex, length);\n        // b. Add new part record { [[type]]: \"literal\", [[value]]: literal } as a new element of the list result.\n        arrPush.call(result, { '[[type]]': 'literal', '[[value]]': literal });\n    }\n    // 10. Return result.\n    return result;\n}\n\n/*\n * @spec[tc39/ecma402/master/spec/numberformat.html]\n * @clause[sec-formatnumber]\n */\nexport function FormatNumber(numberFormat, x) {\n    // 1. Let parts be ? PartitionNumberPattern(numberFormat, x).\n    let parts = PartitionNumberPattern(numberFormat, x);\n    // 2. Let result be an empty String.\n    let result = '';\n    // 3. For each part in parts, do:\n    for (let i = 0; parts.length > i; i++) {\n        let part = parts[i];\n        // a. Set result to a String value produced by concatenating result and part.[[value]].\n        result += part['[[value]]'];\n    }\n    // 4. Return result.\n    return result;\n}\n\n/**\n * When the ToRawPrecision abstract operation is called with arguments x (which\n * must be a finite non-negative number), minPrecision, and maxPrecision (both\n * must be integers between 1 and 21) the following steps are taken:\n */\nfunction ToRawPrecision (x, minPrecision, maxPrecision) {\n    // 1. Let p be maxPrecision.\n    let p = maxPrecision;\n\n    let m, e;\n\n    // 2. If x = 0, then\n    if (x === 0) {\n        // a. Let m be the String consisting of p occurrences of the character \"0\".\n        m = arrJoin.call(Array (p + 1), '0');\n        // b. Let e be 0.\n        e = 0;\n    }\n    // 3. Else\n    else {\n        // a. Let e and n be integers such that 10ᵖ⁻¹ ≤ n < 10ᵖ and for which the\n        //    exact mathematical value of n × 10ᵉ⁻ᵖ⁺¹ – x is as close to zero as\n        //    possible. If there are two such sets of e and n, pick the e and n for\n        //    which n × 10ᵉ⁻ᵖ⁺¹ is larger.\n        e = log10Floor(Math.abs(x));\n\n        // Easier to get to m from here\n        let f = Math.round(Math.exp((Math.abs(e - p + 1)) * Math.LN10));\n\n        // b. Let m be the String consisting of the digits of the decimal\n        //    representation of n (in order, with no leading zeroes)\n        m = String(Math.round(e - p + 1 < 0 ? x * f : x / f));\n    }\n\n    // 4. If e ≥ p, then\n    if (e >= p)\n        // a. Return the concatenation of m and e-p+1 occurrences of the character \"0\".\n        return m + arrJoin.call(Array(e-p+1 + 1), '0');\n\n    // 5. If e = p-1, then\n    else if (e === p - 1)\n        // a. Return m.\n        return m;\n\n    // 6. If e ≥ 0, then\n    else if (e >= 0)\n        // a. Let m be the concatenation of the first e+1 characters of m, the character\n        //    \".\", and the remaining p–(e+1) characters of m.\n        m = m.slice(0, e + 1) + '.' + m.slice(e + 1);\n\n    // 7. If e < 0, then\n    else if (e < 0)\n        // a. Let m be the concatenation of the String \"0.\", –(e+1) occurrences of the\n        //    character \"0\", and the string m.\n        m = '0.' + arrJoin.call(Array (-(e+1) + 1), '0') + m;\n\n    // 8. If m contains the character \".\", and maxPrecision > minPrecision, then\n    if (m.indexOf(\".\") >= 0 && maxPrecision > minPrecision) {\n        // a. Let cut be maxPrecision – minPrecision.\n        let cut = maxPrecision - minPrecision;\n\n        // b. Repeat while cut > 0 and the last character of m is \"0\":\n        while (cut > 0 && m.charAt(m.length-1) === '0') {\n            //  i. Remove the last character from m.\n            m = m.slice(0, -1);\n\n            //  ii. Decrease cut by 1.\n            cut--;\n        }\n\n        // c. If the last character of m is \".\", then\n        if (m.charAt(m.length-1) === '.')\n            //    i. Remove the last character from m.\n            m = m.slice(0, -1);\n    }\n    // 9. Return m.\n    return m;\n}\n\n/**\n * @spec[tc39/ecma402/master/spec/numberformat.html]\n * @clause[sec-torawfixed]\n * When the ToRawFixed abstract operation is called with arguments x (which must\n * be a finite non-negative number), minInteger (which must be an integer between\n * 1 and 21), minFraction, and maxFraction (which must be integers between 0 and\n * 20) the following steps are taken:\n */\nfunction ToRawFixed(x, minInteger, minFraction, maxFraction) {\n    // 1. Let f be maxFraction.\n    let f = maxFraction;\n    // 2. Let n be an integer for which the exact mathematical value of n ÷ 10f – x is as close to zero as possible. If there are two such n, pick the larger n.\n    let n = Math.pow(10, f) * x; // diverging...\n    // 3. If n = 0, let m be the String \"0\". Otherwise, let m be the String consisting of the digits of the decimal representation of n (in order, with no leading zeroes).\n    let m = (n === 0 ? \"0\" : n.toFixed(0)); // divering...\n\n    {\n        // this diversion is needed to take into consideration big numbers, e.g.:\n        // 1.2344501e+37 -> 12344501000000000000000000000000000000\n        let idx;\n        let exp = (idx = m.indexOf('e')) > -1 ? m.slice(idx + 1) : 0;\n        if (exp) {\n            m = m.slice(0, idx).replace('.', '');\n            m += arrJoin.call(Array(exp - (m.length - 1) + 1), '0');\n        }\n    }\n\n    let int;\n    // 4. If f ≠ 0, then\n    if (f !== 0) {\n        // a. Let k be the number of characters in m.\n        let k = m.length;\n        // a. If k ≤ f, then\n        if (k <= f) {\n            // i. Let z be the String consisting of f+1–k occurrences of the character \"0\".\n            let z = arrJoin.call(Array(f + 1 - k + 1), '0');\n            // ii. Let m be the concatenation of Strings z and m.\n            m = z + m;\n            // iii. Let k be f+1.\n            k = f + 1;\n        }\n        // a. Let a be the first k–f characters of m, and let b be the remaining f characters of m.\n        let a = m.substring(0, k - f), b = m.substring(k - f, m.length);\n        // a. Let m be the concatenation of the three Strings a, \".\", and b.\n        m = a + \".\" + b;\n        // a. Let int be the number of characters in a.\n        int = a.length;\n    }\n    // 5. Else, let int be the number of characters in m.\n    else int = m.length;\n    // 6. Let cut be maxFraction – minFraction.\n    let cut = maxFraction - minFraction;\n    // 7. Repeat while cut > 0 and the last character of m is \"0\":\n    while (cut > 0 && m.slice(-1) === \"0\") {\n        // a. Remove the last character from m.\n        m = m.slice(0, -1);\n        // a. Decrease cut by 1.\n        cut--;\n    }\n    // 8. If the last character of m is \".\", then\n    if (m.slice(-1) === \".\") {\n        // a. Remove the last character from m.\n        m = m.slice(0, -1);\n    }\n    // 9. If int < minInteger, then\n    if (int < minInteger) {\n        // a. Let z be the String consisting of minInteger–int occurrences of the character \"0\".\n        let z = arrJoin.call(Array(minInteger - int + 1), '0');\n        // a. Let m be the concatenation of Strings z and m.\n        m = z + m;\n    }\n    // 10. Return m.\n    return m;\n}\n\n// Sect 11.3.2 Table 2, Numbering systems\n// ======================================\nlet numSys = {\n    arab: ['\\u0660', '\\u0661', '\\u0662', '\\u0663', '\\u0664', '\\u0665', '\\u0666', '\\u0667', '\\u0668', '\\u0669'],\n    arabext: ['\\u06F0', '\\u06F1', '\\u06F2', '\\u06F3', '\\u06F4', '\\u06F5', '\\u06F6', '\\u06F7', '\\u06F8', '\\u06F9'],\n    bali: ['\\u1B50', '\\u1B51', '\\u1B52', '\\u1B53', '\\u1B54', '\\u1B55', '\\u1B56', '\\u1B57', '\\u1B58', '\\u1B59'],\n    beng: ['\\u09E6', '\\u09E7', '\\u09E8', '\\u09E9', '\\u09EA', '\\u09EB', '\\u09EC', '\\u09ED', '\\u09EE', '\\u09EF'],\n    deva: ['\\u0966', '\\u0967', '\\u0968', '\\u0969', '\\u096A', '\\u096B', '\\u096C', '\\u096D', '\\u096E', '\\u096F'],\n    fullwide: ['\\uFF10', '\\uFF11', '\\uFF12', '\\uFF13', '\\uFF14', '\\uFF15', '\\uFF16', '\\uFF17', '\\uFF18', '\\uFF19'],\n    gujr: ['\\u0AE6', '\\u0AE7', '\\u0AE8', '\\u0AE9', '\\u0AEA', '\\u0AEB', '\\u0AEC', '\\u0AED', '\\u0AEE', '\\u0AEF'],\n    guru: ['\\u0A66', '\\u0A67', '\\u0A68', '\\u0A69', '\\u0A6A', '\\u0A6B', '\\u0A6C', '\\u0A6D', '\\u0A6E', '\\u0A6F'],\n    hanidec: ['\\u3007', '\\u4E00', '\\u4E8C', '\\u4E09', '\\u56DB', '\\u4E94', '\\u516D', '\\u4E03', '\\u516B', '\\u4E5D'],\n    khmr: ['\\u17E0', '\\u17E1', '\\u17E2', '\\u17E3', '\\u17E4', '\\u17E5', '\\u17E6', '\\u17E7', '\\u17E8', '\\u17E9'],\n    knda: ['\\u0CE6', '\\u0CE7', '\\u0CE8', '\\u0CE9', '\\u0CEA', '\\u0CEB', '\\u0CEC', '\\u0CED', '\\u0CEE', '\\u0CEF'],\n    laoo: ['\\u0ED0', '\\u0ED1', '\\u0ED2', '\\u0ED3', '\\u0ED4', '\\u0ED5', '\\u0ED6', '\\u0ED7', '\\u0ED8', '\\u0ED9'],\n    latn: ['\\u0030', '\\u0031', '\\u0032', '\\u0033', '\\u0034', '\\u0035', '\\u0036', '\\u0037', '\\u0038', '\\u0039'],\n    limb: ['\\u1946', '\\u1947', '\\u1948', '\\u1949', '\\u194A', '\\u194B', '\\u194C', '\\u194D', '\\u194E', '\\u194F'],\n    mlym: ['\\u0D66', '\\u0D67', '\\u0D68', '\\u0D69', '\\u0D6A', '\\u0D6B', '\\u0D6C', '\\u0D6D', '\\u0D6E', '\\u0D6F'],\n    mong: ['\\u1810', '\\u1811', '\\u1812', '\\u1813', '\\u1814', '\\u1815', '\\u1816', '\\u1817', '\\u1818', '\\u1819'],\n    mymr: ['\\u1040', '\\u1041', '\\u1042', '\\u1043', '\\u1044', '\\u1045', '\\u1046', '\\u1047', '\\u1048', '\\u1049'],\n    orya: ['\\u0B66', '\\u0B67', '\\u0B68', '\\u0B69', '\\u0B6A', '\\u0B6B', '\\u0B6C', '\\u0B6D', '\\u0B6E', '\\u0B6F'],\n    tamldec: ['\\u0BE6', '\\u0BE7', '\\u0BE8', '\\u0BE9', '\\u0BEA', '\\u0BEB', '\\u0BEC', '\\u0BED', '\\u0BEE', '\\u0BEF'],\n    telu: ['\\u0C66', '\\u0C67', '\\u0C68', '\\u0C69', '\\u0C6A', '\\u0C6B', '\\u0C6C', '\\u0C6D', '\\u0C6E', '\\u0C6F'],\n    thai: ['\\u0E50', '\\u0E51', '\\u0E52', '\\u0E53', '\\u0E54', '\\u0E55', '\\u0E56', '\\u0E57', '\\u0E58', '\\u0E59'],\n    tibt: ['\\u0F20', '\\u0F21', '\\u0F22', '\\u0F23', '\\u0F24', '\\u0F25', '\\u0F26', '\\u0F27', '\\u0F28', '\\u0F29']\n};\n\n/**\n * This function provides access to the locale and formatting options computed\n * during initialization of the object.\n *\n * The function returns a new object whose properties and attributes are set as\n * if constructed by an object literal assigning to each of the following\n * properties the value of the corresponding internal property of this\n * NumberFormat object (see 11.4): locale, numberingSystem, style, currency,\n * currencyDisplay, minimumIntegerDigits, minimumFractionDigits,\n * maximumFractionDigits, minimumSignificantDigits, maximumSignificantDigits, and\n * useGrouping. Properties whose corresponding internal properties are not present\n * are not assigned.\n */\n/* 11.3.3 */defineProperty(Intl.NumberFormat.prototype, 'resolvedOptions', {\n    configurable: true,\n    writable: true,\n    value: function () {\n        let prop,\n            descs = new Record(),\n            props = [\n                'locale', 'numberingSystem', 'style', 'currency', 'currencyDisplay',\n                'minimumIntegerDigits', 'minimumFractionDigits', 'maximumFractionDigits',\n                'minimumSignificantDigits', 'maximumSignificantDigits', 'useGrouping'\n            ],\n            internal = this !== null && typeof this === 'object' && getInternalProperties(this);\n\n        // Satisfy test 11.3_b\n        if (!internal || !internal['[[initializedNumberFormat]]'])\n            throw new TypeError('`this` value for resolvedOptions() is not an initialized Intl.NumberFormat object.');\n\n        for (let i = 0, max = props.length; i < max; i++) {\n            if (hop.call(internal, prop = '[['+ props[i] +']]'))\n                descs[props[i]] = { value: internal[prop], writable: true, configurable: true, enumerable: true };\n        }\n\n        return objCreate({}, descs);\n    }\n});\n","/* jslint esnext: true */\n\n// Match these datetime components in a CLDR pattern, except those in single quotes\nlet expDTComponents = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\n// trim patterns after transformations\nlet expPatternTrimmer = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n// Skip over patterns with these datetime components because we don't have data\n// to back them up:\n// timezone, weekday, amoung others\nlet unwantedDTCs = /[rqQASjJgwWIQq]/; // xXVO were removed from this list in favor of computing matches with timeZoneName values but printing as empty string\n\nlet dtKeys = [\"era\", \"year\", \"month\", \"day\", \"weekday\", \"quarter\"];\nlet tmKeys = [\"hour\", \"minute\", \"second\", \"hour12\", \"timeZoneName\"];\n\nfunction isDateFormatOnly(obj) {\n    for (let i = 0; i < tmKeys.length; i += 1) {\n        if (obj.hasOwnProperty(tmKeys[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction isTimeFormatOnly(obj) {\n    for (let i = 0; i < dtKeys.length; i += 1) {\n        if (obj.hasOwnProperty(dtKeys[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction joinDateAndTimeFormats(dateFormatObj, timeFormatObj) {\n    let o = { _: {} };\n    for (let i = 0; i < dtKeys.length; i += 1) {\n        if (dateFormatObj[dtKeys[i]]) {\n            o[dtKeys[i]] = dateFormatObj[dtKeys[i]];\n        }\n        if (dateFormatObj._[dtKeys[i]]) {\n            o._[dtKeys[i]] = dateFormatObj._[dtKeys[i]];\n        }\n    }\n    for (let j = 0; j < tmKeys.length; j += 1) {\n        if (timeFormatObj[tmKeys[j]]) {\n            o[tmKeys[j]] = timeFormatObj[tmKeys[j]];\n        }\n        if (timeFormatObj._[tmKeys[j]]) {\n            o._[tmKeys[j]] = timeFormatObj._[tmKeys[j]];\n        }\n    }\n    return o;\n}\n\nfunction computeFinalPatterns(formatObj) {\n    // From http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Format_Patterns:\n    //  'In patterns, two single quotes represents a literal single quote, either\n    //   inside or outside single quotes. Text within single quotes is not\n    //   interpreted in any way (except for two adjacent single quotes).'\n    formatObj.pattern12 = formatObj.extendedPattern.replace(/'([^']*)'/g, ($0, literal) => {\n        return literal ? literal : \"'\";\n    });\n\n    // pattern 12 is always the default. we can produce the 24 by removing {ampm}\n    formatObj.pattern = formatObj.pattern12.replace('{ampm}', '').replace(expPatternTrimmer, '');\n    return formatObj;\n}\n\nfunction expDTComponentsMeta($0, formatObj) {\n    switch ($0.charAt(0)) {\n        // --- Era\n        case 'G':\n            formatObj.era = [ 'short', 'short', 'short', 'long', 'narrow' ][$0.length-1];\n            return '{era}';\n\n        // --- Year\n        case 'y':\n        case 'Y':\n        case 'u':\n        case 'U':\n        case 'r':\n            formatObj.year = $0.length === 2 ? '2-digit' : 'numeric';\n            return '{year}';\n\n        // --- Quarter (not supported in this polyfill)\n        case 'Q':\n        case 'q':\n            formatObj.quarter = [ 'numeric', '2-digit', 'short', 'long', 'narrow' ][$0.length-1];\n            return '{quarter}';\n\n        // --- Month\n        case 'M':\n        case 'L':\n            formatObj.month = [ 'numeric', '2-digit', 'short', 'long', 'narrow' ][$0.length-1];\n            return '{month}';\n\n        // --- Week (not supported in this polyfill)\n        case 'w':\n            // week of the year\n            formatObj.week = $0.length === 2 ? '2-digit' : 'numeric';\n            return '{weekday}';\n        case 'W':\n            // week of the month\n            formatObj.week = 'numeric';\n            return '{weekday}';\n\n        // --- Day\n        case 'd':\n            // day of the month\n            formatObj.day = $0.length === 2 ? '2-digit' : 'numeric';\n            return '{day}';\n        case 'D': // day of the year\n        case 'F': // day of the week\n        case 'g':\n            // 1..n: Modified Julian day\n            formatObj.day = 'numeric';\n            return '{day}';\n\n        // --- Week Day\n        case 'E':\n            // day of the week\n            formatObj.weekday = [ 'short', 'short', 'short', 'long', 'narrow', 'short' ][$0.length-1];\n            return '{weekday}';\n        case 'e':\n            // local day of the week\n            formatObj.weekday = [ 'numeric', '2-digit', 'short', 'long', 'narrow', 'short' ][$0.length-1];\n            return '{weekday}';\n        case 'c':\n            // stand alone local day of the week\n            formatObj.weekday = [ 'numeric', undefined, 'short', 'long', 'narrow', 'short' ][$0.length-1];\n            return '{weekday}';\n\n        // --- Period\n        case 'a': // AM, PM\n        case 'b': // am, pm, noon, midnight\n        case 'B': // flexible day periods\n            formatObj.hour12 = true;\n            return '{ampm}';\n\n        // --- Hour\n        case 'h':\n        case 'H':\n            formatObj.hour = $0.length === 2 ? '2-digit' : 'numeric';\n            return '{hour}';\n        case 'k':\n        case 'K':\n            formatObj.hour12 = true; // 12-hour-cycle time formats (using h or K)\n            formatObj.hour = $0.length === 2 ? '2-digit' : 'numeric';\n            return '{hour}';\n\n        // --- Minute\n        case 'm':\n            formatObj.minute = $0.length === 2 ? '2-digit' : 'numeric';\n            return '{minute}';\n\n        // --- Second\n        case 's':\n            formatObj.second = $0.length === 2 ? '2-digit' : 'numeric';\n            return '{second}';\n        case 'S':\n        case 'A':\n            formatObj.second = 'numeric';\n            return '{second}';\n\n        // --- Timezone\n        case 'z': // 1..3, 4: specific non-location format\n        case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\n        case 'O': // 1, 4: miliseconds in day short, long\n        case 'v': // 1, 4: generic non-location format\n        case 'V': // 1, 2, 3, 4: time zone ID or city\n        case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\n        case 'x': // 1, 2, 3, 4: The ISO8601 varios formats\n            // this polyfill only supports much, for now, we are just doing something dummy\n            formatObj.timeZoneName = $0.length < 4 ? 'short' : 'long';\n            return '{timeZoneName}';\n    }\n}\n\n\n/**\n * Converts the CLDR availableFormats into the objects and patterns required by\n * the ECMAScript Internationalization API specification.\n */\nexport function createDateTimeFormat(skeleton, pattern) {\n    // we ignore certain patterns that are unsupported to avoid this expensive op.\n    if (unwantedDTCs.test(pattern))\n        return undefined;\n\n    let formatObj = {\n        originalPattern: pattern,\n        _: {}\n    };\n\n    // Replace the pattern string with the one required by the specification, whilst\n    // at the same time evaluating it for the subsets and formats\n    formatObj.extendedPattern = pattern.replace(expDTComponents, ($0) => {\n        // See which symbol we're dealing with\n        return expDTComponentsMeta($0, formatObj._);\n    });\n\n    // Match the skeleton string with the one required by the specification\n    // this implementation is based on the Date Field Symbol Table:\n    // http://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n    // Note: we are adding extra data to the formatObject even though this polyfill\n    //       might not support it.\n    skeleton.replace(expDTComponents, ($0) => {\n        // See which symbol we're dealing with\n        return expDTComponentsMeta($0, formatObj);\n    });\n\n    return computeFinalPatterns(formatObj);\n}\n\n/**\n * Processes DateTime formats from CLDR to an easier-to-parse format.\n * the result of this operation should be cached the first time a particular\n * calendar is analyzed.\n *\n * The specification requires we support at least the following subsets of\n * date/time components:\n *\n *   - 'weekday', 'year', 'month', 'day', 'hour', 'minute', 'second'\n *   - 'weekday', 'year', 'month', 'day'\n *   - 'year', 'month', 'day'\n *   - 'year', 'month'\n *   - 'month', 'day'\n *   - 'hour', 'minute', 'second'\n *   - 'hour', 'minute'\n *\n * We need to cherry pick at least these subsets from the CLDR data and convert\n * them into the pattern objects used in the ECMA-402 API.\n */\nexport function createDateTimeFormats(formats) {\n    let availableFormats = formats.availableFormats;\n    let timeFormats = formats.timeFormats;\n    let dateFormats = formats.dateFormats;\n    let result = [];\n    let skeleton, pattern, computed, i, j;\n    let timeRelatedFormats = [];\n    let dateRelatedFormats = [];\n\n    // Map available (custom) formats into a pattern for createDateTimeFormats\n    for (skeleton in availableFormats) {\n        if (availableFormats.hasOwnProperty(skeleton)) {\n            pattern = availableFormats[skeleton];\n            computed = createDateTimeFormat(skeleton, pattern);\n            if (computed) {\n                result.push(computed);\n                // in some cases, the format is only displaying date specific props\n                // or time specific props, in which case we need to also produce the\n                // combined formats.\n                if (isDateFormatOnly(computed)) {\n                    dateRelatedFormats.push(computed);\n                } else if (isTimeFormatOnly(computed)) {\n                    timeRelatedFormats.push(computed);\n                }\n            }\n        }\n    }\n\n    // Map time formats into a pattern for createDateTimeFormats\n    for (skeleton in timeFormats) {\n        if (timeFormats.hasOwnProperty(skeleton)) {\n            pattern = timeFormats[skeleton];\n            computed = createDateTimeFormat(skeleton, pattern);\n            if (computed) {\n                result.push(computed);\n                timeRelatedFormats.push(computed);\n            }\n        }\n    }\n\n    // Map date formats into a pattern for createDateTimeFormats\n    for (skeleton in dateFormats) {\n        if (dateFormats.hasOwnProperty(skeleton)) {\n            pattern = dateFormats[skeleton];\n            computed = createDateTimeFormat(skeleton, pattern);\n            if (computed) {\n                result.push(computed);\n                dateRelatedFormats.push(computed);\n            }\n        }\n    }\n\n    // combine custom time and custom date formats when they are orthogonals to complete the\n    // formats supported by CLDR.\n    // This Algo is based on section \"Missing Skeleton Fields\" from:\n    // http://unicode.org/reports/tr35/tr35-dates.html#availableFormats_appendItems\n    for (i = 0; i < timeRelatedFormats.length; i += 1) {\n        for (j = 0; j < dateRelatedFormats.length; j += 1) {\n            if (dateRelatedFormats[j].month === 'long') {\n                pattern = dateRelatedFormats[j].weekday ? formats.full : formats.long;\n            } else if (dateRelatedFormats[j].month === 'short') {\n                pattern = formats.medium;\n            } else {\n                pattern = formats.short;\n            }\n            computed = joinDateAndTimeFormats(dateRelatedFormats[j], timeRelatedFormats[i]);\n            computed.originalPattern = pattern;\n            computed.extendedPattern = pattern\n                .replace('{0}', timeRelatedFormats[i].extendedPattern)\n                .replace('{1}', dateRelatedFormats[j].extendedPattern)\n                .replace(/^[,\\s]+|[,\\s]+$/gi, '');\n            result.push(computeFinalPatterns(computed));\n        }\n    }\n\n    return result;\n}\n\n// this represents the exceptions of the rule that are not covered by CLDR availableFormats\n// for single property configurations, they play no role when using multiple properties, and\n// those that are not in this table, are not exceptions or are not covered by the data we\n// provide.\nconst validSyntheticProps = {\n    second: {\n        numeric:   's',\n        '2-digit': 'ss'\n    },\n    minute: {\n        numeric:   'm',\n        '2-digit': 'mm'\n    },\n    year: {\n        numeric:   'y',\n        '2-digit': 'yy'\n    },\n    day: {\n        numeric:   'd',\n        '2-digit': 'dd'\n    },\n    month: {\n        numeric:   'L',\n        '2-digit': 'LL',\n        narrow:    'LLLLL',\n        short:     'LLL',\n        long:      'LLLL'\n    },\n    weekday: {\n        narrow:  'ccccc',\n        short:   'ccc',\n        long:    'cccc'\n    }\n};\n\nexport function generateSyntheticFormat(propName, propValue) {\n    if (validSyntheticProps[propName] && validSyntheticProps[propName][propValue]) {\n        return {\n            originalPattern: validSyntheticProps[propName][propValue],\n            _: {\n                [propName]: propValue\n            },\n            extendedPattern: `{${propName}}`,\n            [propName]: propValue,\n            pattern12: `{${propName}}`,\n            pattern: `{${propName}}`\n        };\n    }\n}\n","// 12.1 The Intl.DateTimeFormat constructor\n// ==================================\n\nimport {\n    toLatinUpperCase\n} from './6.locales-currencies-tz.js';\n\nimport {\n    Intl\n} from \"./8.intl.js\";\n\nimport {\n    CanonicalizeLocaleList,\n    ResolveLocale,\n    GetOption,\n    SupportedLocales\n} from \"./9.negotiation.js\";\n\nimport {\n    FormatNumber\n} from \"./11.numberformat.js\";\n\nimport {\n    generateSyntheticFormat,\n    createDateTimeFormats\n} from \"./cldr\";\n\nimport {\n    internals,\n    es3,\n    fnBind,\n    defineProperty,\n    toObject,\n    getInternalProperties,\n    createRegExpRestore,\n    secret,\n    Record,\n    List,\n    hop,\n    objCreate,\n    toNumber,\n    arrPush,\n    arrIndexOf\n} from './util.js';\n\n// An object map of date component keys, saves using a regex later\nconst dateWidths = objCreate(null, { narrow:{}, short:{}, long:{} });\n\n/**\n * Returns a string for a date component, resolved using multiple inheritance as specified\n * as specified in the Unicode Technical Standard 35.\n */\nfunction resolveDateString(data, ca, component, width, key) {\n    // From http://www.unicode.org/reports/tr35/tr35.html#Multiple_Inheritance:\n    // 'In clearly specified instances, resources may inherit from within the same locale.\n    //  For example, ... the Buddhist calendar inherits from the Gregorian calendar.'\n    let obj = data[ca] && data[ca][component]\n                ? data[ca][component]\n                : data.gregory[component],\n\n        // \"sideways\" inheritance resolves strings when a key doesn't exist\n        alts = {\n            narrow: ['short', 'long'],\n            short:  ['long', 'narrow'],\n            long:   ['short', 'narrow']\n        },\n\n        //\n        resolved = hop.call(obj, width)\n                  ? obj[width]\n                  : hop.call(obj, alts[width][0])\n                      ? obj[alts[width][0]]\n                      : obj[alts[width][1]];\n\n    // `key` wouldn't be specified for components 'dayPeriods'\n    return key !== null ? resolved[key] : resolved;\n}\n\n// Define the DateTimeFormat constructor internally so it cannot be tainted\nexport function DateTimeFormatConstructor () {\n    let locales = arguments[0];\n    let options = arguments[1];\n\n    if (!this || this === Intl) {\n        return new Intl.DateTimeFormat(locales, options);\n    }\n    return InitializeDateTimeFormat(toObject(this), locales, options);\n}\n\ndefineProperty(Intl, 'DateTimeFormat', {\n    configurable: true,\n    writable: true,\n    value: DateTimeFormatConstructor\n});\n\n// Must explicitly set prototypes as unwritable\ndefineProperty(DateTimeFormatConstructor, 'prototype', {\n    writable: false\n});\n\n/**\n * The abstract operation InitializeDateTimeFormat accepts the arguments dateTimeFormat\n * (which must be an object), locales, and options. It initializes dateTimeFormat as a\n * DateTimeFormat object.\n */\nexport function/* 12.1.1.1 */InitializeDateTimeFormat (dateTimeFormat, locales, options) {\n    // This will be a internal properties object if we're not already initialized\n    let internal = getInternalProperties(dateTimeFormat);\n\n    // Create an object whose props can be used to restore the values of RegExp props\n    let regexpRestore = createRegExpRestore();\n\n    // 1. If dateTimeFormat has an [[initializedIntlObject]] internal property with\n    //    value true, throw a TypeError exception.\n    if (internal['[[initializedIntlObject]]'] === true)\n        throw new TypeError('`this` object has already been initialized as an Intl object');\n\n    // Need this to access the `internal` object\n    defineProperty(dateTimeFormat, '__getInternalProperties', {\n        value: function () {\n            // NOTE: Non-standard, for internal use only\n            if (arguments[0] === secret)\n                return internal;\n        }\n    });\n\n    // 2. Set the [[initializedIntlObject]] internal property of numberFormat to true.\n    internal['[[initializedIntlObject]]'] = true;\n\n    // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList\n    //    abstract operation (defined in 9.2.1) with argument locales.\n    let requestedLocales = CanonicalizeLocaleList(locales);\n\n    // 4. Let options be the result of calling the ToDateTimeOptions abstract\n    //    operation (defined below) with arguments options, \"any\", and \"date\".\n    options = ToDateTimeOptions(options, 'any', 'date');\n\n    // 5. Let opt be a new Record.\n    let opt = new Record();\n\n    // 6. Let matcher be the result of calling the GetOption abstract operation\n    //    (defined in 9.2.9) with arguments options, \"localeMatcher\", \"string\", a List\n    //    containing the two String values \"lookup\" and \"best fit\", and \"best fit\".\n    let matcher = GetOption(options, 'localeMatcher', 'string', new List('lookup', 'best fit'), 'best fit');\n\n    // 7. Set opt.[[localeMatcher]] to matcher.\n    opt['[[localeMatcher]]'] = matcher;\n\n    // 8. Let DateTimeFormat be the standard built-in object that is the initial\n    //    value of Intl.DateTimeFormat.\n    let DateTimeFormat = internals.DateTimeFormat; // This is what we *really* need\n\n    // 9. Let localeData be the value of the [[localeData]] internal property of\n    //    DateTimeFormat.\n    let localeData = DateTimeFormat['[[localeData]]'];\n\n    // 10. Let r be the result of calling the ResolveLocale abstract operation\n    //     (defined in 9.2.5) with the [[availableLocales]] internal property of\n    //      DateTimeFormat, requestedLocales, opt, the [[relevantExtensionKeys]]\n    //      internal property of DateTimeFormat, and localeData.\n    let r = ResolveLocale(DateTimeFormat['[[availableLocales]]'], requestedLocales,\n                opt, DateTimeFormat['[[relevantExtensionKeys]]'], localeData);\n\n    // 11. Set the [[locale]] internal property of dateTimeFormat to the value of\n    //     r.[[locale]].\n    internal['[[locale]]'] = r['[[locale]]'];\n\n    // 12. Set the [[calendar]] internal property of dateTimeFormat to the value of\n    //     r.[[ca]].\n    internal['[[calendar]]'] = r['[[ca]]'];\n\n    // 13. Set the [[numberingSystem]] internal property of dateTimeFormat to the value of\n    //     r.[[nu]].\n    internal['[[numberingSystem]]'] = r['[[nu]]'];\n\n    // The specification doesn't tell us to do this, but it's helpful later on\n    internal['[[dataLocale]]'] = r['[[dataLocale]]'];\n\n    // 14. Let dataLocale be the value of r.[[dataLocale]].\n    let dataLocale = r['[[dataLocale]]'];\n\n    // 15. Let tz be the result of calling the [[Get]] internal method of options with\n    //     argument \"timeZone\".\n    let tz = options.timeZone;\n\n    // 16. If tz is not undefined, then\n    if (tz !== undefined) {\n        // a. Let tz be ToString(tz).\n        // b. Convert tz to upper case as described in 6.1.\n        //    NOTE: If an implementation accepts additional time zone values, as permitted\n        //          under certain conditions by the Conformance clause, different casing\n        //          rules apply.\n        tz = toLatinUpperCase(tz);\n\n        // c. If tz is not \"UTC\", then throw a RangeError exception.\n        // ###TODO: accept more time zones###\n        if (tz !== 'UTC')\n            throw new RangeError('timeZone is not supported.');\n    }\n\n    // 17. Set the [[timeZone]] internal property of dateTimeFormat to tz.\n    internal['[[timeZone]]'] = tz;\n\n    // 18. Let opt be a new Record.\n    opt = new Record();\n\n    // 19. For each row of Table 3, except the header row, do:\n    for (let prop in dateTimeComponents) {\n        if (!hop.call(dateTimeComponents, prop))\n            continue;\n\n        // 20. Let prop be the name given in the Property column of the row.\n        // 21. Let value be the result of calling the GetOption abstract operation,\n        //     passing as argument options, the name given in the Property column of the\n        //     row, \"string\", a List containing the strings given in the Values column of\n        //     the row, and undefined.\n        let value = GetOption(options, prop, 'string', dateTimeComponents[prop]);\n\n        // 22. Set opt.[[<prop>]] to value.\n        opt['[['+prop+']]'] = value;\n    }\n\n    // Assigned a value below\n    let bestFormat;\n\n    // 23. Let dataLocaleData be the result of calling the [[Get]] internal method of\n    //     localeData with argument dataLocale.\n    let dataLocaleData = localeData[dataLocale];\n\n    // 24. Let formats be the result of calling the [[Get]] internal method of\n    //     dataLocaleData with argument \"formats\".\n    //     Note: we process the CLDR formats into the spec'd structure\n    let formats = ToDateTimeFormats(dataLocaleData.formats);\n\n    // 25. Let matcher be the result of calling the GetOption abstract operation with\n    //     arguments options, \"formatMatcher\", \"string\", a List containing the two String\n    //     values \"basic\" and \"best fit\", and \"best fit\".\n    matcher = GetOption(options, 'formatMatcher', 'string', new List('basic', 'best fit'), 'best fit');\n\n    // Optimization: caching the processed formats as a one time operation by\n    // replacing the initial structure from localeData\n    dataLocaleData.formats = formats;\n\n    // 26. If matcher is \"basic\", then\n    if (matcher === 'basic') {\n        // 27. Let bestFormat be the result of calling the BasicFormatMatcher abstract\n        //     operation (defined below) with opt and formats.\n        bestFormat = BasicFormatMatcher(opt, formats);\n\n    // 28. Else\n    } else {\n        {\n            // diverging\n            let hr12 = GetOption(options, 'hour12', 'boolean'/*, undefined, undefined*/);\n            opt.hour12 = hr12 === undefined ? dataLocaleData.hour12 : hr12;\n        }\n        // 29. Let bestFormat be the result of calling the BestFitFormatMatcher\n        //     abstract operation (defined below) with opt and formats.\n        bestFormat = BestFitFormatMatcher(opt, formats);\n    }\n\n    // 30. For each row in Table 3, except the header row, do\n    for (let prop in dateTimeComponents) {\n        if (!hop.call(dateTimeComponents, prop))\n            continue;\n\n        // a. Let prop be the name given in the Property column of the row.\n        // b. Let pDesc be the result of calling the [[GetOwnProperty]] internal method of\n        //    bestFormat with argument prop.\n        // c. If pDesc is not undefined, then\n        if (hop.call(bestFormat, prop)) {\n            // i. Let p be the result of calling the [[Get]] internal method of bestFormat\n            //    with argument prop.\n            let p = bestFormat[prop];\n            {\n                // diverging\n                p = bestFormat._ && hop.call(bestFormat._, prop) ? bestFormat._[prop] : p;\n            }\n\n            // ii. Set the [[<prop>]] internal property of dateTimeFormat to p.\n            internal['[['+prop+']]'] = p;\n        }\n    }\n\n    let pattern; // Assigned a value below\n\n    // 31. Let hr12 be the result of calling the GetOption abstract operation with\n    //     arguments options, \"hour12\", \"boolean\", undefined, and undefined.\n    let hr12 = GetOption(options, 'hour12', 'boolean'/*, undefined, undefined*/);\n\n    // 32. If dateTimeFormat has an internal property [[hour]], then\n    if (internal['[[hour]]']) {\n        // a. If hr12 is undefined, then let hr12 be the result of calling the [[Get]]\n        //    internal method of dataLocaleData with argument \"hour12\".\n        hr12 = hr12 === undefined ? dataLocaleData.hour12 : hr12;\n\n        // b. Set the [[hour12]] internal property of dateTimeFormat to hr12.\n        internal['[[hour12]]'] = hr12;\n\n        // c. If hr12 is true, then\n        if (hr12 === true) {\n            // i. Let hourNo0 be the result of calling the [[Get]] internal method of\n            //    dataLocaleData with argument \"hourNo0\".\n            let hourNo0 = dataLocaleData.hourNo0;\n\n            // ii. Set the [[hourNo0]] internal property of dateTimeFormat to hourNo0.\n            internal['[[hourNo0]]'] = hourNo0;\n\n            // iii. Let pattern be the result of calling the [[Get]] internal method of\n            //      bestFormat with argument \"pattern12\".\n            pattern = bestFormat.pattern12;\n        }\n\n        // d. Else\n        else\n            // i. Let pattern be the result of calling the [[Get]] internal method of\n            //    bestFormat with argument \"pattern\".\n            pattern = bestFormat.pattern;\n    }\n\n    // 33. Else\n    else\n        // a. Let pattern be the result of calling the [[Get]] internal method of\n        //    bestFormat with argument \"pattern\".\n        pattern = bestFormat.pattern;\n\n    // 34. Set the [[pattern]] internal property of dateTimeFormat to pattern.\n    internal['[[pattern]]'] = pattern;\n\n    // 35. Set the [[boundFormat]] internal property of dateTimeFormat to undefined.\n    internal['[[boundFormat]]'] = undefined;\n\n    // 36. Set the [[initializedDateTimeFormat]] internal property of dateTimeFormat to\n    //     true.\n    internal['[[initializedDateTimeFormat]]'] = true;\n\n    // In ES3, we need to pre-bind the format() function\n    if (es3)\n        dateTimeFormat.format = GetFormatDateTime.call(dateTimeFormat);\n\n    // Restore the RegExp properties\n    regexpRestore();\n\n    // Return the newly initialised object\n    return dateTimeFormat;\n}\n\n/**\n * Several DateTimeFormat algorithms use values from the following table, which provides\n * property names and allowable values for the components of date and time formats:\n */\nlet dateTimeComponents = {\n         weekday: [ \"narrow\", \"short\", \"long\" ],\n             era: [ \"narrow\", \"short\", \"long\" ],\n            year: [ \"2-digit\", \"numeric\" ],\n           month: [ \"2-digit\", \"numeric\", \"narrow\", \"short\", \"long\" ],\n             day: [ \"2-digit\", \"numeric\" ],\n            hour: [ \"2-digit\", \"numeric\" ],\n          minute: [ \"2-digit\", \"numeric\" ],\n          second: [ \"2-digit\", \"numeric\" ],\n    timeZoneName: [ \"short\", \"long\" ]\n};\n\n/**\n * When the ToDateTimeOptions abstract operation is called with arguments options,\n * required, and defaults, the following steps are taken:\n */\nfunction ToDateTimeFormats(formats) {\n    if (Object.prototype.toString.call(formats) === '[object Array]') {\n        return formats;\n    }\n    return createDateTimeFormats(formats);\n}\n\n/**\n * When the ToDateTimeOptions abstract operation is called with arguments options,\n * required, and defaults, the following steps are taken:\n */\nexport function ToDateTimeOptions (options, required, defaults) {\n    // 1. If options is undefined, then let options be null, else let options be\n    //    ToObject(options).\n    if (options === undefined)\n        options = null;\n\n    else {\n        // (#12) options needs to be a Record, but it also needs to inherit properties\n        let opt2 = toObject(options);\n        options = new Record();\n\n        for (let k in opt2)\n            options[k] = opt2[k];\n    }\n\n    // 2. Let create be the standard built-in function object defined in ES5, 15.2.3.5.\n    let create = objCreate;\n\n    // 3. Let options be the result of calling the [[Call]] internal method of create with\n    //    undefined as the this value and an argument list containing the single item\n    //    options.\n    options = create(options);\n\n    // 4. Let needDefaults be true.\n    let needDefaults = true;\n\n    // 5. If required is \"date\" or \"any\", then\n    if (required === 'date' || required === 'any') {\n        // a. For each of the property names \"weekday\", \"year\", \"month\", \"day\":\n            // i. If the result of calling the [[Get]] internal method of options with the\n            //    property name is not undefined, then let needDefaults be false.\n        if (options.weekday !== undefined || options.year !== undefined\n                || options.month !== undefined || options.day !== undefined)\n            needDefaults = false;\n    }\n\n    // 6. If required is \"time\" or \"any\", then\n    if (required === 'time' || required === 'any') {\n        // a. For each of the property names \"hour\", \"minute\", \"second\":\n            // i. If the result of calling the [[Get]] internal method of options with the\n            //    property name is not undefined, then let needDefaults be false.\n        if (options.hour !== undefined || options.minute !== undefined || options.second !== undefined)\n                needDefaults = false;\n    }\n\n    // 7. If needDefaults is true and defaults is either \"date\" or \"all\", then\n    if (needDefaults && (defaults === 'date' || defaults === 'all'))\n        // a. For each of the property names \"year\", \"month\", \"day\":\n            // i. Call the [[DefineOwnProperty]] internal method of options with the\n            //    property name, Property Descriptor {[[Value]]: \"numeric\", [[Writable]]:\n            //    true, [[Enumerable]]: true, [[Configurable]]: true}, and false.\n        options.year = options.month = options.day = 'numeric';\n\n    // 8. If needDefaults is true and defaults is either \"time\" or \"all\", then\n    if (needDefaults && (defaults === 'time' || defaults === 'all'))\n        // a. For each of the property names \"hour\", \"minute\", \"second\":\n            // i. Call the [[DefineOwnProperty]] internal method of options with the\n            //    property name, Property Descriptor {[[Value]]: \"numeric\", [[Writable]]:\n            //    true, [[Enumerable]]: true, [[Configurable]]: true}, and false.\n        options.hour = options.minute = options.second = 'numeric';\n\n    // 9. Return options.\n    return options;\n}\n\n/**\n * When the BasicFormatMatcher abstract operation is called with two arguments options and\n * formats, the following steps are taken:\n */\nfunction BasicFormatMatcher (options, formats) {\n    // 1. Let removalPenalty be 120.\n    let removalPenalty = 120;\n\n    // 2. Let additionPenalty be 20.\n    let additionPenalty = 20;\n\n    // 3. Let longLessPenalty be 8.\n    let longLessPenalty = 8;\n\n    // 4. Let longMorePenalty be 6.\n    let longMorePenalty = 6;\n\n    // 5. Let shortLessPenalty be 6.\n    let shortLessPenalty = 6;\n\n    // 6. Let shortMorePenalty be 3.\n    let shortMorePenalty = 3;\n\n    // 7. Let bestScore be -Infinity.\n    let bestScore = -Infinity;\n\n    // 8. Let bestFormat be undefined.\n    let bestFormat;\n\n    // 9. Let i be 0.\n    let i = 0;\n\n    // 10. Assert: formats is an Array object.\n\n    // 11. Let len be the result of calling the [[Get]] internal method of formats with argument \"length\".\n    let len = formats.length;\n\n    // 12. Repeat while i < len:\n    while (i < len) {\n        // a. Let format be the result of calling the [[Get]] internal method of formats with argument ToString(i).\n        let format = formats[i];\n\n        // b. Let score be 0.\n        let score = 0;\n\n        // c. For each property shown in Table 3:\n        for (let property in dateTimeComponents) {\n            if (!hop.call(dateTimeComponents, property))\n                continue;\n\n            // i. Let optionsProp be options.[[<property>]].\n            let optionsProp = options['[['+ property +']]'];\n\n            // ii. Let formatPropDesc be the result of calling the [[GetOwnProperty]] internal method of format\n            //     with argument property.\n            // iii. If formatPropDesc is not undefined, then\n            //     1. Let formatProp be the result of calling the [[Get]] internal method of format with argument property.\n            let formatProp = hop.call(format, property) ? format[property] : undefined;\n\n            // iv. If optionsProp is undefined and formatProp is not undefined, then decrease score by\n            //     additionPenalty.\n            if (optionsProp === undefined && formatProp !== undefined)\n                score -= additionPenalty;\n\n            // v. Else if optionsProp is not undefined and formatProp is undefined, then decrease score by\n            //    removalPenalty.\n            else if (optionsProp !== undefined && formatProp === undefined)\n                score -= removalPenalty;\n\n            // vi. Else\n            else {\n                // 1. Let values be the array [\"2-digit\", \"numeric\", \"narrow\", \"short\",\n                //    \"long\"].\n                let values = [ '2-digit', 'numeric', 'narrow', 'short', 'long' ];\n\n                // 2. Let optionsPropIndex be the index of optionsProp within values.\n                let optionsPropIndex = arrIndexOf.call(values, optionsProp);\n\n                // 3. Let formatPropIndex be the index of formatProp within values.\n                let formatPropIndex = arrIndexOf.call(values, formatProp);\n\n                // 4. Let delta be max(min(formatPropIndex - optionsPropIndex, 2), -2).\n                let delta = Math.max(Math.min(formatPropIndex - optionsPropIndex, 2), -2);\n\n                // 5. If delta = 2, decrease score by longMorePenalty.\n                if (delta === 2)\n                    score -= longMorePenalty;\n\n                // 6. Else if delta = 1, decrease score by shortMorePenalty.\n                else if (delta === 1)\n                    score -= shortMorePenalty;\n\n                // 7. Else if delta = -1, decrease score by shortLessPenalty.\n                else if (delta === -1)\n                    score -= shortLessPenalty;\n\n                // 8. Else if delta = -2, decrease score by longLessPenalty.\n                else if (delta === -2)\n                    score -= longLessPenalty;\n            }\n        }\n\n        // d. If score > bestScore, then\n        if (score > bestScore) {\n            // i. Let bestScore be score.\n            bestScore = score;\n\n            // ii. Let bestFormat be format.\n            bestFormat = format;\n        }\n\n        // e. Increase i by 1.\n        i++;\n    }\n\n    // 13. Return bestFormat.\n    return bestFormat;\n}\n\n/**\n * When the BestFitFormatMatcher abstract operation is called with two arguments options\n * and formats, it performs implementation dependent steps, which should return a set of\n * component representations that a typical user of the selected locale would perceive as\n * at least as good as the one returned by BasicFormatMatcher.\n *\n * This polyfill defines the algorithm to be the same as BasicFormatMatcher,\n * with the addition of bonus points awarded where the requested format is of\n * the same data type as the potentially matching format.\n *\n * This algo relies on the concept of closest distance matching described here:\n * http://unicode.org/reports/tr35/tr35-dates.html#Matching_Skeletons\n * Typically a “best match” is found using a closest distance match, such as:\n *\n * Symbols requesting a best choice for the locale are replaced.\n *      j → one of {H, k, h, K}; C → one of {a, b, B}\n * -> Covered by cldr.js matching process\n *\n * For fields with symbols representing the same type (year, month, day, etc):\n *     Most symbols have a small distance from each other.\n *         M ≅ L; E ≅ c; a ≅ b ≅ B; H ≅ k ≅ h ≅ K; ...\n *     -> Covered by cldr.js matching process\n *\n *     Width differences among fields, other than those marking text vs numeric, are given small distance from each other.\n *         MMM ≅ MMMM\n *         MM ≅ M\n *     Numeric and text fields are given a larger distance from each other.\n *         MMM ≈ MM\n *     Symbols representing substantial differences (week of year vs week of month) are given much larger a distances from each other.\n *         d ≋ D; ...\n *     Missing or extra fields cause a match to fail. (But see Missing Skeleton Fields).\n *\n *\n * For example,\n *\n *     { month: 'numeric', day: 'numeric' }\n *\n * should match\n *\n *     { month: '2-digit', day: '2-digit' }\n *\n * rather than\n *\n *     { month: 'short', day: 'numeric' }\n *\n * This makes sense because a user requesting a formatted date with numeric parts would\n * not expect to see the returned format containing narrow, short or long part names\n */\nfunction BestFitFormatMatcher (options, formats) {\n    /** Diverging: this block implements the hack for single property configuration, eg.:\n     *\n     *      `new Intl.DateTimeFormat('en', {day: 'numeric'})`\n     *\n     * should produce a single digit with the day of the month. This is needed because\n     * CLDR `availableFormats` data structure doesn't cover these cases.\n     */\n    {\n        const optionsPropNames = [];\n        for (let property in dateTimeComponents) {\n            if (!hop.call(dateTimeComponents, property))\n                continue;\n\n            if (options['[['+ property +']]'] !== undefined) {\n                optionsPropNames.push(property);\n            }\n        }\n        if (optionsPropNames.length === 1) {\n            const bestFormat = generateSyntheticFormat(optionsPropNames[0], options['[['+ optionsPropNames[0] +']]']);\n            if (bestFormat) {\n                return bestFormat;\n            }\n        }\n    }\n\n    // 1. Let removalPenalty be 120.\n    let removalPenalty = 120;\n\n    // 2. Let additionPenalty be 20.\n    let additionPenalty = 20;\n\n    // 3. Let longLessPenalty be 8.\n    let longLessPenalty = 8;\n\n    // 4. Let longMorePenalty be 6.\n    let longMorePenalty = 6;\n\n    // 5. Let shortLessPenalty be 6.\n    let shortLessPenalty = 6;\n\n    // 6. Let shortMorePenalty be 3.\n    let shortMorePenalty = 3;\n\n    let patternPenalty = 2;\n\n    let hour12Penalty = 1;\n\n    // 7. Let bestScore be -Infinity.\n    let bestScore = -Infinity;\n\n    // 8. Let bestFormat be undefined.\n    let bestFormat;\n\n    // 9. Let i be 0.\n    let i = 0;\n\n    // 10. Assert: formats is an Array object.\n\n    // 11. Let len be the result of calling the [[Get]] internal method of formats with argument \"length\".\n    let len = formats.length;\n\n    // 12. Repeat while i < len:\n    while (i < len) {\n        // a. Let format be the result of calling the [[Get]] internal method of formats with argument ToString(i).\n        let format = formats[i];\n\n        // b. Let score be 0.\n        let score = 0;\n\n        // c. For each property shown in Table 3:\n        for (let property in dateTimeComponents) {\n            if (!hop.call(dateTimeComponents, property))\n                continue;\n\n            // i. Let optionsProp be options.[[<property>]].\n            let optionsProp = options['[['+ property +']]'];\n\n            // ii. Let formatPropDesc be the result of calling the [[GetOwnProperty]] internal method of format\n            //     with argument property.\n            // iii. If formatPropDesc is not undefined, then\n            //     1. Let formatProp be the result of calling the [[Get]] internal method of format with argument property.\n            let formatProp = hop.call(format, property) ? format[property] : undefined;\n\n            // Diverging: using the default properties produced by the pattern/skeleton\n            // to match it with user options, and apply a penalty\n            let patternProp = hop.call(format._, property) ? format._[property] : undefined;\n            if (optionsProp !== patternProp) {\n                score -= patternPenalty;\n            }\n\n            // iv. If optionsProp is undefined and formatProp is not undefined, then decrease score by\n            //     additionPenalty.\n            if (optionsProp === undefined && formatProp !== undefined)\n                score -= additionPenalty;\n\n            // v. Else if optionsProp is not undefined and formatProp is undefined, then decrease score by\n            //    removalPenalty.\n            else if (optionsProp !== undefined && formatProp === undefined)\n                score -= removalPenalty;\n\n            // vi. Else\n            else {\n                // 1. Let values be the array [\"2-digit\", \"numeric\", \"narrow\", \"short\",\n                //    \"long\"].\n                let values = [ '2-digit', 'numeric', 'narrow', 'short', 'long' ];\n\n                // 2. Let optionsPropIndex be the index of optionsProp within values.\n                let optionsPropIndex = arrIndexOf.call(values, optionsProp);\n\n                // 3. Let formatPropIndex be the index of formatProp within values.\n                let formatPropIndex = arrIndexOf.call(values, formatProp);\n\n                // 4. Let delta be max(min(formatPropIndex - optionsPropIndex, 2), -2).\n                let delta = Math.max(Math.min(formatPropIndex - optionsPropIndex, 2), -2);\n\n                {\n                    // diverging from spec\n                    // When the bestFit argument is true, subtract additional penalty where data types are not the same\n                    if ((formatPropIndex <= 1 && optionsPropIndex >= 2) || (formatPropIndex >= 2 && optionsPropIndex <= 1)) {\n                        // 5. If delta = 2, decrease score by longMorePenalty.\n                        if (delta > 0)\n                            score -= longMorePenalty;\n                        else if (delta < 0)\n                            score -= longLessPenalty;\n                    } else {\n                        // 5. If delta = 2, decrease score by longMorePenalty.\n                        if (delta > 1)\n                            score -= shortMorePenalty;\n                        else if (delta < -1)\n                            score -= shortLessPenalty;\n                    }\n                }\n            }\n        }\n\n        {\n            // diverging to also take into consideration differences between 12 or 24 hours\n            // which is special for the best fit only.\n            if (format._.hour12 !== options.hour12) {\n                score -= hour12Penalty;\n            }\n        }\n\n        // d. If score > bestScore, then\n        if (score > bestScore) {\n            // i. Let bestScore be score.\n            bestScore = score;\n            // ii. Let bestFormat be format.\n            bestFormat = format;\n        }\n\n        // e. Increase i by 1.\n        i++;\n    }\n\n    // 13. Return bestFormat.\n    return bestFormat;\n}\n\n/* 12.2.3 */internals.DateTimeFormat = {\n    '[[availableLocales]]': [],\n    '[[relevantExtensionKeys]]': ['ca', 'nu'],\n    '[[localeData]]': {}\n};\n\n/**\n * When the supportedLocalesOf method of Intl.DateTimeFormat is called, the\n * following steps are taken:\n */\n/* 12.2.2 */\ndefineProperty(Intl.DateTimeFormat, 'supportedLocalesOf', {\n    configurable: true,\n    writable: true,\n    value: fnBind.call(function (locales) {\n        // Bound functions only have the `this` value altered if being used as a constructor,\n        // this lets us imitate a native function that has no constructor\n        if (!hop.call(this, '[[availableLocales]]'))\n            throw new TypeError('supportedLocalesOf() is not a constructor');\n\n        // Create an object whose props can be used to restore the values of RegExp props\n        let regexpRestore = createRegExpRestore(),\n\n        // 1. If options is not provided, then let options be undefined.\n            options = arguments[1],\n\n        // 2. Let availableLocales be the value of the [[availableLocales]] internal\n        //    property of the standard built-in object that is the initial value of\n        //    Intl.NumberFormat.\n\n            availableLocales = this['[[availableLocales]]'],\n\n        // 3. Let requestedLocales be the result of calling the CanonicalizeLocaleList\n        //    abstract operation (defined in 9.2.1) with argument locales.\n            requestedLocales = CanonicalizeLocaleList(locales);\n\n        // Restore the RegExp properties\n        regexpRestore();\n\n        // 4. Return the result of calling the SupportedLocales abstract operation\n        //    (defined in 9.2.8) with arguments availableLocales, requestedLocales,\n        //    and options.\n        return SupportedLocales(availableLocales, requestedLocales, options);\n    }, internals.NumberFormat)\n});\n\n/**\n * This named accessor property returns a function that formats a number\n * according to the effective locale and the formatting options of this\n * DateTimeFormat object.\n */\n/* 12.3.2 */defineProperty(Intl.DateTimeFormat.prototype, 'format', {\n    configurable: true,\n    get: GetFormatDateTime\n});\n\nfunction GetFormatDateTime() {\n    let internal = this !== null && typeof this === 'object' && getInternalProperties(this);\n\n    // Satisfy test 12.3_b\n    if (!internal || !internal['[[initializedDateTimeFormat]]'])\n        throw new TypeError('`this` value for format() is not an initialized Intl.DateTimeFormat object.');\n\n    // The value of the [[Get]] attribute is a function that takes the following\n    // steps:\n\n    // 1. If the [[boundFormat]] internal property of this DateTimeFormat object\n    //    is undefined, then:\n    if (internal['[[boundFormat]]'] === undefined) {\n        // a. Let F be a Function object, with internal properties set as\n        //    specified for built-in functions in ES5, 15, or successor, and the\n        //    length property set to 0, that takes the argument date and\n        //    performs the following steps:\n        let F = function (date = undefined) {\n                //   i. If date is not provided or is undefined, then let x be the\n                //      result as if by the expression Date.now() where Date.now is\n                //      the standard built-in function defined in ES5, 15.9.4.4.\n                //  ii. Else let x be ToNumber(date).\n                // iii. Return the result of calling the FormatDateTime abstract\n                //      operation (defined below) with arguments this and x.\n                let x = date === undefined ? Date.now() : toNumber(date);\n                return FormatDateTime(this, x);\n            };\n        // b. Let bind be the standard built-in function object defined in ES5,\n        //    15.3.4.5.\n        // c. Let bf be the result of calling the [[Call]] internal method of\n        //    bind with F as the this value and an argument list containing\n        //    the single item this.\n        let bf = fnBind.call(F, this);\n        // d. Set the [[boundFormat]] internal property of this NumberFormat\n        //    object to bf.\n        internal['[[boundFormat]]'] = bf;\n    }\n    // Return the value of the [[boundFormat]] internal property of this\n    // NumberFormat object.\n    return internal['[[boundFormat]]'];\n}\n\nfunction formatToParts(date = undefined) {\n    let internal = this !== null && typeof this === 'object' && getInternalProperties(this);\n\n    if (!internal || !internal['[[initializedDateTimeFormat]]'])\n        throw new TypeError('`this` value for formatToParts() is not an initialized Intl.DateTimeFormat object.');\n\n    let x = date === undefined ? Date.now() : toNumber(date);\n    return FormatToPartsDateTime(this, x);\n}\n\nObject.defineProperty(Intl.DateTimeFormat.prototype, 'formatToParts', {\n  enumerable: false,\n  writable: true,\n  configurable: true,\n  value: formatToParts\n});\n\nfunction CreateDateTimeParts(dateTimeFormat, x) {\n    // 1. If x is not a finite Number, then throw a RangeError exception.\n    if (!isFinite(x))\n        throw new RangeError('Invalid valid date passed to format');\n\n    let internal = dateTimeFormat.__getInternalProperties(secret);\n\n    // Creating restore point for properties on the RegExp object... please wait\n    /* let regexpRestore = */createRegExpRestore(); // ###TODO: review this\n\n    // 2. Let locale be the value of the [[locale]] internal property of dateTimeFormat.\n    let locale = internal['[[locale]]'];\n\n    // 3. Let nf be the result of creating a new NumberFormat object as if by the\n    // expression new Intl.NumberFormat([locale], {useGrouping: false}) where\n    // Intl.NumberFormat is the standard built-in constructor defined in 11.1.3.\n    let nf = new Intl.NumberFormat([locale], {useGrouping: false});\n\n    // 4. Let nf2 be the result of creating a new NumberFormat object as if by the\n    // expression new Intl.NumberFormat([locale], {minimumIntegerDigits: 2, useGrouping:\n    // false}) where Intl.NumberFormat is the standard built-in constructor defined in\n    // 11.1.3.\n    let nf2 = new Intl.NumberFormat([locale], {minimumIntegerDigits: 2, useGrouping: false});\n\n    // 5. Let tm be the result of calling the ToLocalTime abstract operation (defined\n    // below) with x, the value of the [[calendar]] internal property of dateTimeFormat,\n    // and the value of the [[timeZone]] internal property of dateTimeFormat.\n    let tm = ToLocalTime(x, internal['[[calendar]]'], internal['[[timeZone]]']);\n\n    // 6. Let result be the value of the [[pattern]] internal property of dateTimeFormat.\n    let pattern = internal['[[pattern]]'];\n\n    // 7.\n    let result = new List();\n\n    // 8.\n    let index = 0;\n\n    // 9.\n    let beginIndex = pattern.indexOf('{');\n\n    // 10.\n    let endIndex = 0;\n\n    // Need the locale minus any extensions\n    let dataLocale = internal['[[dataLocale]]'];\n\n    // Need the calendar data from CLDR\n    let localeData = internals.DateTimeFormat['[[localeData]]'][dataLocale].calendars;\n    let ca = internal['[[calendar]]'];\n\n    // 11.\n        while (beginIndex !== -1) {\n            let fv;\n            // a.\n            endIndex = pattern.indexOf('}', beginIndex);\n            // b.\n            if (endIndex === -1) {\n              throw new Error('Unclosed pattern');\n            }\n            // c.\n            if (beginIndex > index) {\n                arrPush.call(result, {\n                    type: 'literal',\n                    value: pattern.substring(index, beginIndex)\n                });\n            }\n            // d.\n            let p = pattern.substring(beginIndex + 1, endIndex);\n            // e.\n            if (dateTimeComponents.hasOwnProperty(p)) {\n              //   i. Let f be the value of the [[<p>]] internal property of dateTimeFormat.\n              let f = internal['[['+ p +']]'];\n              //  ii. Let v be the value of tm.[[<p>]].\n              let v = tm['[['+ p +']]'];\n              // iii. If p is \"year\" and v ≤ 0, then let v be 1 - v.\n              if (p === 'year' && v <= 0) {\n                v = 1 - v;\n              }\n              //  iv. If p is \"month\", then increase v by 1.\n              else if (p === 'month') {\n                v++;\n              }\n              //   v. If p is \"hour\" and the value of the [[hour12]] internal property of\n              //      dateTimeFormat is true, then\n              else if (p === 'hour' && internal['[[hour12]]'] === true) {\n                  // 1. Let v be v modulo 12.\n                  v = v % 12;\n                  // 2. If v is 0 and the value of the [[hourNo0]] internal property of\n                  //    dateTimeFormat is true, then let v be 12.\n                  if (v === 0 && internal['[[hourNo0]]'] === true) {\n                      v = 12;\n                  }\n              }\n\n              //  vi. If f is \"numeric\", then\n              if (f === 'numeric') {\n                  // 1. Let fv be the result of calling the FormatNumber abstract operation\n                  //    (defined in 11.3.2) with arguments nf and v.\n                  fv = FormatNumber(nf, v);\n              }\n              // vii. Else if f is \"2-digit\", then\n              else if (f === '2-digit') {\n                  // 1. Let fv be the result of calling the FormatNumber abstract operation\n                  //    with arguments nf2 and v.\n                  fv = FormatNumber(nf2, v);\n                  // 2. If the length of fv is greater than 2, let fv be the substring of fv\n                  //    containing the last two characters.\n                  if (fv.length > 2) {\n                      fv = fv.slice(-2);\n                  }\n              }\n              // viii. Else if f is \"narrow\", \"short\", or \"long\", then let fv be a String\n              //     value representing f in the desired form; the String value depends upon\n              //     the implementation and the effective locale and calendar of\n              //     dateTimeFormat. If p is \"month\", then the String value may also depend\n              //     on whether dateTimeFormat has a [[day]] internal property. If p is\n              //     \"timeZoneName\", then the String value may also depend on the value of\n              //     the [[inDST]] field of tm.\n              else if (f in dateWidths) {\n                switch (p) {\n                  case 'month':\n                    fv = resolveDateString(localeData, ca, 'months', f, tm['[['+ p +']]']);\n                    break;\n\n                  case 'weekday':\n                    try {\n                      fv = resolveDateString(localeData, ca, 'days', f, tm['[['+ p +']]']);\n                      // fv = resolveDateString(ca.days, f)[tm['[['+ p +']]']];\n                    } catch (e) {\n                      throw new Error('Could not find weekday data for locale '+locale);\n                    }\n                    break;\n\n                  case 'timeZoneName':\n                    fv = ''; // ###TODO\n                    break;\n\n                  case 'era':\n                    try {\n                      fv = resolveDateString(localeData, ca, 'eras', f, tm['[['+ p +']]']);\n                    } catch (e) {\n                      throw new Error('Could not find era data for locale '+locale);\n                    }\n                    break;\n\n                  default:\n                    fv = tm['[['+ p +']]'];\n                }\n              }\n              // ix\n              arrPush.call(result, {\n                type: p,\n                value: fv\n              });\n            // f.\n            } else if (p === 'ampm') {\n              // i.\n              let v = tm['[[hour]]'];\n              // ii./iii.\n              fv = resolveDateString(localeData, ca, 'dayPeriods', v > 11 ? 'pm' : 'am', null);\n              // iv.\n              arrPush.call(result, {\n                type: 'dayPeriod',\n                value: fv\n              });\n            // g.\n            } else {\n              arrPush.call(result, {\n                type: 'literal',\n                value: pattern.substring(beginIndex, endIndex + 1)\n              });\n            }\n            // h.\n            index = endIndex + 1;\n            // i.\n            beginIndex = pattern.indexOf('{', index);\n        }\n        // 12.\n        if (endIndex < pattern.length - 1) {\n          arrPush.call(result, {\n            type: 'literal',\n            value: pattern.substr(endIndex + 1)\n          });\n        }\n        // 13.\n        return result;\n}\n\n/**\n * When the FormatDateTime abstract operation is called with arguments dateTimeFormat\n * (which must be an object initialized as a DateTimeFormat) and x (which must be a Number\n * value), it returns a String value representing x (interpreted as a time value as\n * specified in ES5, 15.9.1.1) according to the effective locale and the formatting\n * options of dateTimeFormat.\n */\nexport function FormatDateTime(dateTimeFormat, x) {\n  let parts = CreateDateTimeParts(dateTimeFormat, x);\n  let result = '';\n\n  for (let i = 0; parts.length > i; i++) {\n      let part = parts[i];\n      result += part.value;\n  }\n  return result;\n}\n\nfunction FormatToPartsDateTime(dateTimeFormat, x) {\n  let parts = CreateDateTimeParts(dateTimeFormat, x);\n  let result = [];\n  for (let i = 0; parts.length > i; i++) {\n    let part = parts[i];\n    result.push({\n      type: part.type,\n      value: part.value\n    });\n  }\n  return result;\n}\n\n\n/**\n * When the ToLocalTime abstract operation is called with arguments date, calendar, and\n * timeZone, the following steps are taken:\n */\nfunction ToLocalTime(date, calendar, timeZone) {\n    // 1. Apply calendrical calculations on date for the given calendar and time zone to\n    //    produce weekday, era, year, month, day, hour, minute, second, and inDST values.\n    //    The calculations should use best available information about the specified\n    //    calendar and time zone. If the calendar is \"gregory\", then the calculations must\n    //    match the algorithms specified in ES5, 15.9.1, except that calculations are not\n    //    bound by the restrictions on the use of best available information on time zones\n    //    for local time zone adjustment and daylight saving time adjustment imposed by\n    //    ES5, 15.9.1.7 and 15.9.1.8.\n    // ###TODO###\n    let d = new Date(date),\n        m = 'get' + (timeZone || '');\n\n    // 2. Return a Record with fields [[weekday]], [[era]], [[year]], [[month]], [[day]],\n    //    [[hour]], [[minute]], [[second]], and [[inDST]], each with the corresponding\n    //    calculated value.\n    return new Record({\n        '[[weekday]]': d[m + 'Day'](),\n        '[[era]]'    : +(d[m + 'FullYear']() >= 0),\n        '[[year]]'   : d[m + 'FullYear'](),\n        '[[month]]'  : d[m + 'Month'](),\n        '[[day]]'    : d[m + 'Date'](),\n        '[[hour]]'   : d[m + 'Hours'](),\n        '[[minute]]' : d[m + 'Minutes'](),\n        '[[second]]' : d[m + 'Seconds'](),\n        '[[inDST]]'  : false // ###TODO###\n    });\n}\n\n/**\n * The function returns a new object whose properties and attributes are set as if\n * constructed by an object literal assigning to each of the following properties the\n * value of the corresponding internal property of this DateTimeFormat object (see 12.4):\n * locale, calendar, numberingSystem, timeZone, hour12, weekday, era, year, month, day,\n * hour, minute, second, and timeZoneName. Properties whose corresponding internal\n * properties are not present are not assigned.\n */\n/* 12.3.3 */defineProperty(Intl.DateTimeFormat.prototype, 'resolvedOptions', {\n    writable: true,\n    configurable: true,\n    value: function () {\n        let prop,\n            descs = new Record(),\n            props = [\n                'locale', 'calendar', 'numberingSystem', 'timeZone', 'hour12', 'weekday',\n                'era', 'year', 'month', 'day', 'hour', 'minute', 'second', 'timeZoneName'\n            ],\n            internal = this !== null && typeof this === 'object' && getInternalProperties(this);\n\n        // Satisfy test 12.3_b\n        if (!internal || !internal['[[initializedDateTimeFormat]]'])\n            throw new TypeError('`this` value for resolvedOptions() is not an initialized Intl.DateTimeFormat object.');\n\n        for (let i = 0, max = props.length; i < max; i++) {\n            if (hop.call(internal, prop = '[[' + props[i] + ']]'))\n                descs[props[i]] = { value: internal[prop], writable: true, configurable: true, enumerable: true };\n        }\n\n        return objCreate({}, descs);\n    }\n});\n","// Sect 13 Locale Sensitive Functions of the ECMAScript Language Specification\n// ===========================================================================\n\nimport {\n    Intl\n} from \"./8.intl.js\";\n\nimport {\n    FormatNumber,\n    NumberFormatConstructor\n} from \"./11.numberformat.js\";\n\nimport {\n    ToDateTimeOptions,\n    DateTimeFormatConstructor,\n    FormatDateTime\n} from \"./12.datetimeformat.js\";\n\nlet ls = Intl.__localeSensitiveProtos = {\n    Number: {},\n    Date:   {}\n};\n\n/**\n * When the toLocaleString method is called with optional arguments locales and options,\n * the following steps are taken:\n */\n/* 13.2.1 */ls.Number.toLocaleString = function () {\n    // Satisfy test 13.2.1_1\n    if (Object.prototype.toString.call(this) !== '[object Number]')\n        throw new TypeError('`this` value must be a number for Number.prototype.toLocaleString()');\n\n    // 1. Let x be this Number value (as defined in ES5, 15.7.4).\n    // 2. If locales is not provided, then let locales be undefined.\n    // 3. If options is not provided, then let options be undefined.\n    // 4. Let numberFormat be the result of creating a new object as if by the\n    //    expression new Intl.NumberFormat(locales, options) where\n    //    Intl.NumberFormat is the standard built-in constructor defined in 11.1.3.\n    // 5. Return the result of calling the FormatNumber abstract operation\n    //    (defined in 11.3.2) with arguments numberFormat and x.\n    return FormatNumber(new NumberFormatConstructor(arguments[0], arguments[1]), this);\n};\n\n/**\n * When the toLocaleString method is called with optional arguments locales and options,\n * the following steps are taken:\n */\n/* 13.3.1 */ls.Date.toLocaleString = function () {\n    // Satisfy test 13.3.0_1\n    if (Object.prototype.toString.call(this) !== '[object Date]')\n        throw new TypeError('`this` value must be a Date instance for Date.prototype.toLocaleString()');\n\n    // 1. Let x be this time value (as defined in ES5, 15.9.5).\n    let x = +this;\n\n    // 2. If x is NaN, then return \"Invalid Date\".\n    if (isNaN(x))\n        return 'Invalid Date';\n\n    // 3. If locales is not provided, then let locales be undefined.\n    let locales = arguments[0];\n\n    // 4. If options is not provided, then let options be undefined.\n    let options = arguments[1];\n\n    // 5. Let options be the result of calling the ToDateTimeOptions abstract\n    //    operation (defined in 12.1.1) with arguments options, \"any\", and \"all\".\n    options = ToDateTimeOptions(options, 'any', 'all');\n\n    // 6. Let dateTimeFormat be the result of creating a new object as if by the\n    //    expression new Intl.DateTimeFormat(locales, options) where\n    //    Intl.DateTimeFormat is the standard built-in constructor defined in 12.1.3.\n    let dateTimeFormat = new DateTimeFormatConstructor(locales, options);\n\n    // 7. Return the result of calling the FormatDateTime abstract operation (defined\n    //    in 12.3.2) with arguments dateTimeFormat and x.\n    return FormatDateTime(dateTimeFormat, x);\n};\n\n/**\n * When the toLocaleDateString method is called with optional arguments locales and\n * options, the following steps are taken:\n */\n/* 13.3.2 */ls.Date.toLocaleDateString = function () {\n    // Satisfy test 13.3.0_1\n    if (Object.prototype.toString.call(this) !== '[object Date]')\n        throw new TypeError('`this` value must be a Date instance for Date.prototype.toLocaleDateString()');\n\n    // 1. Let x be this time value (as defined in ES5, 15.9.5).\n    let x = +this;\n\n    // 2. If x is NaN, then return \"Invalid Date\".\n    if (isNaN(x))\n        return 'Invalid Date';\n\n    // 3. If locales is not provided, then let locales be undefined.\n    let locales = arguments[0],\n\n    // 4. If options is not provided, then let options be undefined.\n    options = arguments[1];\n\n    // 5. Let options be the result of calling the ToDateTimeOptions abstract\n    //    operation (defined in 12.1.1) with arguments options, \"date\", and \"date\".\n    options = ToDateTimeOptions(options, 'date', 'date');\n\n    // 6. Let dateTimeFormat be the result of creating a new object as if by the\n    //    expression new Intl.DateTimeFormat(locales, options) where\n    //    Intl.DateTimeFormat is the standard built-in constructor defined in 12.1.3.\n    let dateTimeFormat = new DateTimeFormatConstructor(locales, options);\n\n    // 7. Return the result of calling the FormatDateTime abstract operation (defined\n    //    in 12.3.2) with arguments dateTimeFormat and x.\n    return FormatDateTime(dateTimeFormat, x);\n};\n\n/**\n * When the toLocaleTimeString method is called with optional arguments locales and\n * options, the following steps are taken:\n */\n/* 13.3.3 */ls.Date.toLocaleTimeString = function () {\n    // Satisfy test 13.3.0_1\n    if (Object.prototype.toString.call(this) !== '[object Date]')\n        throw new TypeError('`this` value must be a Date instance for Date.prototype.toLocaleTimeString()');\n\n    // 1. Let x be this time value (as defined in ES5, 15.9.5).\n    let x = +this;\n\n    // 2. If x is NaN, then return \"Invalid Date\".\n    if (isNaN(x))\n        return 'Invalid Date';\n\n    // 3. If locales is not provided, then let locales be undefined.\n    let locales = arguments[0];\n\n    // 4. If options is not provided, then let options be undefined.\n    let options = arguments[1];\n\n    // 5. Let options be the result of calling the ToDateTimeOptions abstract\n    //    operation (defined in 12.1.1) with arguments options, \"time\", and \"time\".\n    options = ToDateTimeOptions(options, 'time', 'time');\n\n    // 6. Let dateTimeFormat be the result of creating a new object as if by the\n    //    expression new Intl.DateTimeFormat(locales, options) where\n    //    Intl.DateTimeFormat is the standard built-in constructor defined in 12.1.3.\n    let dateTimeFormat = new DateTimeFormatConstructor(locales, options);\n\n    // 7. Return the result of calling the FormatDateTime abstract operation (defined\n    //    in 12.3.2) with arguments dateTimeFormat and x.\n    return FormatDateTime(dateTimeFormat, x);\n};\n\nexport default ls;\n","/**\n * @license Copyright 2013 Andy Earnshaw, MIT License\n *\n * Implements the ECMAScript Internationalization API in ES5-compatible environments,\n * following the ECMA-402 specification as closely as possible\n *\n * ECMA-402: http://ecma-international.org/ecma-402/1.0/\n *\n * CLDR format locale data should be provided using IntlPolyfill.__addLocaleData().\n */\n\nimport {\n    defineProperty,\n    hop,\n    arrPush,\n    arrShift,\n    internals\n} from \"./util.js\";\n\nimport {\n    IsStructurallyValidLanguageTag,\n    defaultLocale,\n    setDefaultLocale\n} from \"./6.locales-currencies-tz.js\";\n\nimport {\n    Intl\n} from \"./8.intl.js\";\n\nimport \"./11.numberformat.js\";\n\nimport \"./12.datetimeformat.js\";\n\nimport ls from \"./13.locale-sensitive-functions.js\";\n\ndefineProperty(Intl, '__applyLocaleSensitivePrototypes', {\n    writable: true,\n    configurable: true,\n    value: function () {\n        defineProperty(Number.prototype, 'toLocaleString', { writable: true, configurable: true, value: ls.Number.toLocaleString });\n        // Need this here for IE 8, to avoid the _DontEnum_ bug\n        defineProperty(Date.prototype, 'toLocaleString', { writable: true, configurable: true, value: ls.Date.toLocaleString });\n\n        for (let k in ls.Date) {\n            if (hop.call(ls.Date, k))\n                defineProperty(Date.prototype, k, { writable: true, configurable: true, value: ls.Date[k] });\n        }\n    }\n});\n\n/**\n * Can't really ship a single script with data for hundreds of locales, so we provide\n * this __addLocaleData method as a means for the developer to add the data on an\n * as-needed basis\n */\ndefineProperty(Intl, '__addLocaleData', {\n    value: function (data) {\n        if (!IsStructurallyValidLanguageTag(data.locale))\n            throw new Error(\"Object passed doesn't identify itself with a valid language tag\");\n\n        addLocaleData(data, data.locale);\n    }\n});\n\nfunction addLocaleData (data, tag) {\n    // Both NumberFormat and DateTimeFormat require number data, so throw if it isn't present\n    if (!data.number)\n        throw new Error(\"Object passed doesn't contain locale data for Intl.NumberFormat\");\n\n    let locale,\n        locales = [ tag ],\n        parts   = tag.split('-');\n\n    // Create fallbacks for locale data with scripts, e.g. Latn, Hans, Vaii, etc\n    if (parts.length > 2 && parts[1].length === 4)\n        arrPush.call(locales, parts[0] + '-' + parts[2]);\n\n    while ((locale = arrShift.call(locales))) {\n        // Add to NumberFormat internal properties as per 11.2.3\n        arrPush.call(internals.NumberFormat['[[availableLocales]]'], locale);\n        internals.NumberFormat['[[localeData]]'][locale] = data.number;\n\n        // ...and DateTimeFormat internal properties as per 12.2.3\n        if (data.date) {\n            data.date.nu = data.number.nu;\n            arrPush.call(internals.DateTimeFormat['[[availableLocales]]'], locale);\n            internals.DateTimeFormat['[[localeData]]'][locale] = data.date;\n        }\n    }\n\n    // If this is the first set of locale data added, make it the default\n    if (defaultLocale === undefined)\n        setDefaultLocale(tag);\n}\n\ndefineProperty(Intl, '__disableRegExpRestore', {\n    value: function () {\n        internals.disableRegExpRestore = true;\n    }\n});\n\nexport default Intl;\n","import IntlPolyfill from \"./core.js\";\n\n// hack to export the polyfill as global Intl if needed\nif (typeof Intl === 'undefined') {\n    try {\n        window.Intl = IntlPolyfill;\n        IntlPolyfill.__applyLocaleSensitivePrototypes();\n    } catch (e) {\n        // can be read only property\n    }\n}\n\nexport default IntlPolyfill;\n"],"names":["defineProperty","realDefineProp","sentinel","Object","get","writable","a","prototype","e","es3","__defineGetter__","hop","hasOwnProperty","obj","name","desc","call","value","arrIndexOf","Array","indexOf","search","t","length","i","arguments","max","objCreate","create","proto","props","F","k","arrSlice","slice","arrConcat","concat","arrPush","push","arrJoin","join","arrShift","shift","fnBind","Function","bind","thisObj","fn","args","apply","internals","secret","Math","random","log10Floor","n","log10","floor","x","round","log","LOG10E","Number","Record","enumerable","configurable","List","createRegExpRestore","disableRegExpRestore","regExpCache","lastMatch","RegExp","leftContext","multiline","input","has","esc","lm","replace","reg","m","exprStr","match","expr","lastIndex","exec","toObject","arg","TypeError","toNumber","toInteger","number","isNaN","Infinity","abs","toLength","len","pow","min","getInternalProperties","__getInternalProperties","extlang","language","script","region","variant","singleton","extension","privateuse","irregular","regular","grandfathered","langtag","expBCP47Syntax","expVariantDupes","expSingletonDupes","expExtSequences","defaultLocale","setDefaultLocale","locale","redundantTags","tags","subtags","BU","DD","FX","TP","YD","ZR","heploc","iw","ji","jw","mo","ayx","bjd","ccq","cjr","cka","cmk","drh","drw","gav","hrr","ibi","kgh","lcq","mst","myt","sca","tie","tkk","tlw","tnf","ybd","yma","extLang","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","aed","aen","afb","afg","ajp","apc","apd","arb","arq","ars","ary","arz","ase","asf","asp","asq","asw","auz","avl","ayh","ayl","ayn","ayp","bbz","bfi","bfk","bjn","bog","bqn","bqy","btj","bve","bvl","bvu","bzs","cdo","cds","cjy","cmn","coa","cpx","csc","csd","cse","csf","csg","csl","csn","csq","csr","czh","czo","doq","dse","dsl","dup","ecs","esl","esn","eso","eth","fcs","fse","fsl","fss","gan","gds","gom","gse","gsg","gsm","gss","gus","hab","haf","hak","hds","hji","hks","hos","hps","hsh","hsl","hsn","icl","ils","inl","ins","ise","isg","isr","jak","jax","jcs","jhs","jls","jos","jsl","jus","kgi","knn","kvb","kvk","kvr","kxd","lbs","lce","lcf","liw","lls","lsg","lsl","lso","lsp","lst","lsy","ltg","lvs","lzh","mdl","meo","mfa","mfb","mfs","mnp","mqg","mre","msd","msi","msr","mui","mzc","mzg","mzy","nan","nbs","ncs","nsi","nsl","nsp","nsr","nzs","okl","orn","ors","pel","pga","pks","prl","prz","psc","psd","pse","psg","psl","pso","psp","psr","pys","rms","rsi","rsl","sdl","sfb","sfs","sgg","sgx","shu","slf","sls","sqk","sqs","ssh","ssp","ssr","svk","swc","swh","swl","syy","tmw","tse","tsm","tsq","tss","tsy","tza","ugn","ugy","ukl","uks","urk","uzn","uzs","vgt","vkk","vkt","vsi","vsl","vsv","wuu","xki","xml","xmm","xms","yds","ysl","yue","zib","zlm","zmi","zsl","zsm","toLatinUpperCase","str","ch","charAt","toUpperCase","IsStructurallyValidLanguageTag","test","CanonicalizeLanguageTag","parts","toLowerCase","split","sort","source","DefaultLocale","expCurrencyCode","IsWellFormedCurrencyCode","currency","c","String","normalized","expUnicodeExSeq","CanonicalizeLocaleList","locales","undefined","seen","O","Pk","kPresent","kValue","tag","RangeError","BestAvailableLocale","availableLocales","candidate","pos","lastIndexOf","substring","LookupMatcher","requestedLocales","availableLocale","noExtensionsLocale","result","extensionIndex","BestFitMatcher","ResolveLocale","options","relevantExtensionKeys","localeData","ReferenceError","matcher","r","foundLocale","extensionSubtags","extensionSubtagsLength","supportedExtension","key","foundLocaleData","keyLocaleData","supportedExtensionAddition","keyPos","requestedValue","valuePos","optionsValue","privateIndex","preExtension","postExtension","LookupSupportedLocales","subset","subsetArray","BestFitSupportedLocales","SupportedLocales","localeMatcher","P","GetOption","property","type","values","fallback","Boolean","GetNumberOption","minimum","maximum","Intl","getCanonicalLocales","ll","currencyMinorUnits","BHD","BYR","XOF","BIF","XAF","CLF","CLP","KMF","DJF","XPF","GNF","ISK","IQD","JPY","JOD","KRW","KWD","LYD","OMR","PYG","RWF","TND","UGX","UYI","VUV","VND","NumberFormatConstructor","NumberFormat","InitializeNumberFormat","numberFormat","internal","regexpRestore","opt","dataLocale","s","cDigits","CurrencyDigits","cd","mnid","mnfdDefault","mnfd","mxfdDefault","mxfd","mnsd","minimumSignificantDigits","mxsd","maximumSignificantDigits","g","dataLocaleData","patterns","stylePatterns","positivePattern","negativePattern","format","GetFormatNumber","babelHelpers","FormatNumber","bf","formatToParts","FormatNumberToParts","PartitionNumberPattern","part","FormatNumberToString","ToRawPrecision","ToRawFixed","nums","data","ild","symbols","latn","pattern","beginIndex","endIndex","nextIndex","Error","literal","p","isFinite","infinity","numSys","digits","digit","integer","fraction","decimalSepIndex","groupSepSymbol","group","groups","pgSize","primaryGroupSize","sgSize","secondaryGroupSize","end","idx","start","integerGroup","decimalSepSymbol","decimal","plusSignSymbol","plusSign","minusSignSymbol","minusSign","percentSignSymbol","percentSign","currencies","minPrecision","maxPrecision","f","exp","LN10","cut","minInteger","minFraction","maxFraction","toFixed","int","z","b","arab","arabext","bali","beng","deva","fullwide","gujr","guru","hanidec","khmr","knda","laoo","limb","mlym","mong","mymr","orya","tamldec","telu","thai","tibt","prop","descs","expDTComponents","expPatternTrimmer","unwantedDTCs","dtKeys","tmKeys","isDateFormatOnly","isTimeFormatOnly","joinDateAndTimeFormats","dateFormatObj","timeFormatObj","o","_","j","computeFinalPatterns","formatObj","pattern12","extendedPattern","$0","expDTComponentsMeta","era","year","quarter","month","week","day","weekday","hour12","hour","minute","second","timeZoneName","createDateTimeFormat","skeleton","originalPattern","createDateTimeFormats","formats","availableFormats","timeFormats","dateFormats","computed","timeRelatedFormats","dateRelatedFormats","full","long","medium","short","validSyntheticProps","numeric","narrow","generateSyntheticFormat","propName","propValue","dateWidths","resolveDateString","ca","component","width","gregory","alts","resolved","DateTimeFormatConstructor","DateTimeFormat","InitializeDateTimeFormat","dateTimeFormat","ToDateTimeOptions","tz","timeZone","dateTimeComponents","bestFormat","ToDateTimeFormats","BasicFormatMatcher","hr12","BestFitFormatMatcher","hourNo0","GetFormatDateTime","toString","required","defaults","opt2","needDefaults","removalPenalty","additionPenalty","longLessPenalty","longMorePenalty","shortLessPenalty","shortMorePenalty","bestScore","score","optionsProp","formatProp","optionsPropIndex","formatPropIndex","delta","optionsPropNames","patternPenalty","hour12Penalty","patternProp","date","Date","now","FormatDateTime","FormatToPartsDateTime","CreateDateTimeParts","nf","useGrouping","nf2","minimumIntegerDigits","tm","ToLocalTime","index","calendars","fv","v","substr","calendar","d","ls","__localeSensitiveProtos","toLocaleString","toLocaleDateString","toLocaleTimeString","addLocaleData","nu","window","IntlPolyfill","__applyLocaleSensitivePrototypes"],"mappings":"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"}